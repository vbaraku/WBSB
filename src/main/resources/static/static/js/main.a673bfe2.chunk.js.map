{"version":3,"sources":["serviceWorker.js","components/UploadReport.jsx","LanguageContext.js","components/graphs/Charts.js","components/Graphs.jsx","components/FilterBar.jsx","components/DashboardGraph.jsx","utils/useWindowDimensions.js","components/MiniDrawer.jsx","components/Dashboard.jsx","assets/images/logo.png","assets/images/logo-csdg.jpg","assets/images/logo-bcsp.png","assets/images/qkss-logo.png","PublicationList.jsx","assets/images/donor.png","components/graphs/SingleQuestionChart.js","components/Homepage.jsx","components/Publications.js","components/OrderQuestions.jsx","components/Admin.jsx","components/Header.jsx","components/PrivateRoute.jsx","App.js","config.js","index.js"],"names":["Boolean","window","location","hostname","match","UploadForm","useState","selectedFile","setSelectedFile","image","setImage","title","setTitle","Date","toISOString","slice","date","setDate","language","setLanguage","className","style","paddingTop","Card","margin","padding","maxWidth","onSubmit","event","preventDefault","formData","FormData","append","axios","post","headers","then","response","alert","error","console","log","display","flexDirection","marginLeft","Typography","variant","Divider","sx","width","fontSize","fontWeight","type","accept","onChange","target","files","Input","name","value","e","newValue","InputLabel","id","Select","labelId","MenuItem","Button","marginTop","client","contentful","space","environment","accessToken","LanguageContext","React","createContext","LanguageUpdateContext","useLanguage","context","useContext","undefined","Error","ThemeProvider","children","localStorage","getItem","getLanguageFromLocalStorage","getDictionary","a","dataKeys","ENG","ALB","SRB","getEntry","fields","webContent","data","dictionary","setDictionary","useEffect","fetchData","changeLanguage","useCallback","setItem","reload","Provider","Charts","question","answers","selectedGraphType","displaySecond","chartRef","createRef","Highcharts","setOptions","colors","getChartOptions","options","credits","enabled","text","subtitle","SOURCE","chart","series","map","el","category","y","percentage","xAxis","categories","animation","yAxis","min","max","plotOptions","packedbubble","minSize","maxSize","layoutAlgorithm","splitSeries","gravitationalConstant","dataLabels","column","colorByPoint","showInLegend","format","color","inside","pie","innerSize","allowPointSelect","cursor","size","stacking","stackedbar","duration","current","reflow","chartOptions","setChartOptions","ref","highcharts","require","Graphs","loading","setSelectedGraphType","length","height","alignItems","NO_ANSWERS","alignSelf","flexWrap","justifyContent","label","graphType","index","paddingLeft","paddingRight","backgroundColor","onClick","FilterBar","filters","setFilters","filterOptions","dict","handleChange","filter","Row","Col","lg","md","xs","year","values","years","YEAR_LABEL","region","regions","REGION_LABEL","regionType","regionTypes","REGION_TYPE_LABEL","nationality","nationalities","NATIONALITY_LABEL","gender","genders","GENDER_LABEL","age","ages","AGE_LABEL","SelectForm","FormControl","m","borderRadius","DashboardGraph","selectedQuestion","country","selectedLanguage","setCountryMask","setAnswers","setLoading","ALL","getFilters","YEARS","KOSOVO_REGIONS","REGION_TYPES_KS","KOSOVO_NATIONALITIES","GENDERS","ALBANIA_REGIONS","REGION_TYPES","ALBANIA_NATIONALITIES","SERBIA_REGIONS","SERBIA_NATIONALITIES","setFilterOptions","editCountryMask","countries","arr","includes","params","Object","entries","reduce","acc","key","questionId","get","breakdown","Box","boxShadow","flexGrow","marginRight","marginBottom","getWindowDimensions","innerWidth","innerHeight","useWindowDimensions","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","ResponsiveDrawer","setSelectedQuestion","drawerOpen","component","position","sm","flexShrink","List","bgcolor","subheader","ListSubheader","Category","open","setOpen","ListItemButton","curr","stopPropagation","ListItemText","primary","ExpandLess","ExpandMore","Collapse","in","timeout","unmountOnExit","questions","q","disablePadding","pl","Dashboard","countryMask","countriesLabel","ALBANIA","KOSOVO","SERBIA","setDisplaySecond","setQuestions","selectedCountry","setSelectedCountry","indexOf","useRef","chartComponent","setDrawerOpen","categoriesToMerge","i","substring","concat","sortedCategories","sort","b","forEach","rank","mergeCategories","categoryArray","j","findQuestionById","document","contains","classList","left","zIndez","endIcon","DELETE","COMPARE","PublicationList","listSize","setYears","publications","setPublications","baseURL","handleDownload","responseType","fileDownload","res","Set","item","catch","err","pub","String","publication","maxHeight","CardMedia","imagePath","alt","CardContent","flex","gutterBottom","to","DOWNLOAD","SingleQuestionChart","setQuestion","navigation","buttonOptions","labels","rotation","whiteSpace","legend","Math","floor","random","background","containerProps","Homepage","updatePartners","PARTNER0","logo","qkssLogo","link","description","PARTNER0_DESC","PARTNER1","bcspLogo","PARTNER1_DESC","PARTNER2","csdgLogo","PARTNER2_DESC","SwiperCore","use","Autoplay","partners","setPartners","observer","IntersectionObserver","entry","isIntersecting","add","remove","querySelectorAll","observe","Container","fluid","TITLE","EXPLORE","pagination","modules","Pagination","spaceBetween","slidesPerView","autoplay","delay","querySelector","scrollIntoView","behavior","METHODOLOGY","ABOUT_WBSB","PARTNERS","DONOR","PUBLICATION","span","offset","METHODOLOGY_DESC1","orientation","Chip","METHODOLOGY_DESC2","METHODOLOGY_DESC3","METHODOLOGY_DESC4","METHODOLOGY_DESC5","textAlign","src","align","ABOUT_WBSB_DESC1","ABOUT_WBSB_DESC2","ABOUT_WBSB_DESC3","ABOUT_WBSB_DESC4","partner","href","READ_MORE","donor","DONATOR","alignContent","borderBottomWidth","RIGHTS","Publications","setYear","OrderQuestions","setCategories","selectedCategory","setSelectedCategory","changes","setChanges","columns","field","headerName","editable","renderEditCell","CustomEditComponent","find","DataGrid","rows","pageSize","rowsPerPageOptions","disableSelectionOnClick","experimentalFeatures","newEditingApi","props","apiRef","useGridApiContext","setEditCellValue","prev","newChanges","change","push","Admin","useCookies","token","rel","Login","navigate","useNavigate","onSuccess","resp","credential","Authorization","decoded","jwtDecode","cookie","exp","toUTCString","onError","Header","useLanguageUpdate","Navbar","collapseOnSelect","expand","Brand","as","Link","Image","Toggle","Nav","HOME","DATA","ALBANIAN","ENGLISH","SERBIAN","LinkWrapper","path","useLocation","pathname","PrivateRoute","cookies","state","from","replace","App","ReactGA","initialize","defaults","interceptors","request","config","Promise","reject","theme","createTheme","typography","fontFamily","pageview","search","element","basename","defaultPath","outlinedFilled","presetColor","i18n","rtlLayout","googleClientId","jwt","secret","firebase","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth0","client_id","domain","ReactDOM","render","clientId","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.a673bfe2.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n        // [::1] is the IPv6 localhost address.\r\n        window.location.hostname === '[::1]' ||\r\n        // 127.0.0.0/8 are considered localhost for IPv4.\r\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then((registration) => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            );\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.');\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch((error) => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: { 'Service-Worker': 'script' }\r\n    })\r\n        .then((response) => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type');\r\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then((registration) => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log('No internet connection found. App is running in offline mode.');\r\n        });\r\n}\r\n\r\nexport function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then((registration) => {\r\n                registration.unregister();\r\n            })\r\n            .catch((error) => {\r\n                console.error(error.message);\r\n            });\r\n    }\r\n}\r\n","import { useState } from 'react';\r\nimport { Input, Button, InputLabel, Typography, Card, Divider, Select, MenuItem } from '@mui/material';\r\nimport axios from 'axios';\r\n\r\nexport default function UploadForm() {\r\n    const [selectedFile, setSelectedFile] = useState(null);\r\n    const [image, setImage] = useState(null);\r\n    const [title, setTitle] = useState();\r\n    // set default date to today in yyyy-mm-dd format\r\n    const [date, setDate] = useState(new Date().toISOString().slice(0, 10));\r\n    const [language, setLanguage] = useState();\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const formData = new FormData();\r\n        formData.append('file', selectedFile);\r\n        formData.append('image', image);\r\n        formData.append('date', date);\r\n        formData.append('language', language);\r\n        formData.append('title', title);\r\n        try {\r\n            axios\r\n                .post('/api/publication', formData, {\r\n                    headers: { 'Content-Type': 'multipart/form-data' }\r\n                })\r\n                .then((response) => {\r\n                    // console.log(response);\r\n                    alert('Publication uploaded successfully');\r\n                });\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    const handleFileSelect = (event) => {\r\n        setSelectedFile(event.target.files[0]);\r\n    };\r\n\r\n    const handleImageSelect = (event) => {\r\n        setImage(event.target.files[0]);\r\n    };\r\n\r\n    const handleDateChange = (newValue) => {\r\n        setDate(newValue);\r\n    };\r\n\r\n    const handleLangChange = (e) => {\r\n        setLanguage(e.target.value);\r\n    };\r\n\r\n    return (\r\n        <div className=\"homepage\" style={{ paddingTop: '50px' }}>\r\n            <Card style={{ margin: 'auto', padding: '15px', maxWidth: '600px' }}>\r\n                <form\r\n                    onSubmit={handleSubmit}\r\n                    style={{\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        padding: 15,\r\n                        maxWidth: '900px',\r\n                        // textAlign: 'center',\r\n                        margin: 'auto',\r\n                        marginLeft: 5\r\n                    }}\r\n                >\r\n                    <Typography variant=\"h4\">Upload new publication</Typography>\r\n                    <Divider sx={{ margin: 1, width: '610px', marginLeft: -5 }} />\r\n                    <Typography style={{ fontSize: '22px', fontWeight: '300' }}>Publication Pdf</Typography>\r\n                    <input type=\"file\" accept=\".pdf\" onChange={handleFileSelect} />\r\n                    <Divider sx={{ margin: 3, width: '580px', marginLeft: -3 }} />\r\n                    <Typography style={{ fontSize: '22px', fontWeight: '300' }}>Publication image</Typography>\r\n                    <input style={{ width: '250px' }} type=\"file\" accept=\"image/*\" onChange={handleImageSelect} />\r\n                    <Divider sx={{ margin: 3, width: '580px', marginLeft: -3 }} />\r\n                    <Typography style={{ fontSize: '22px', fontWeight: '300' }}>Publication title</Typography>\r\n                    <Input\r\n                        sx={{ width: '300px' }}\r\n                        name=\"title\"\r\n                        value={title}\r\n                        onChange={(e) => {\r\n                            setTitle(e.target.value);\r\n                        }}\r\n                    />\r\n\r\n                    <Divider sx={{ margin: 3, width: '580px', marginLeft: -3 }} />\r\n                    <Typography style={{ fontSize: '22px', fontWeight: '300' }}>Publication Date</Typography>\r\n                    <input style={{ width: '300px' }} type=\"date\" value={date} onChange={(e) => handleDateChange(e.target.value)} />\r\n                    <Divider sx={{ margin: 3, width: '580px', marginLeft: -3 }} />\r\n                    <InputLabel id=\"select-language\">Language</InputLabel>\r\n                    <Select labelId=\"demo-simple-select-label\" id=\"demo-simple-select\" value={language} onChange={handleLangChange}>\r\n                        <MenuItem value=\"ALB\">Albanian</MenuItem>\r\n                        <MenuItem value=\"ENG\">English</MenuItem>\r\n                        <MenuItem value=\"SRB\">Serbian</MenuItem>\r\n                    </Select>\r\n                    <Button type=\"submit\" variant=\"contained\" sx={{ width: '150px', margin: 'auto', marginTop: 3 }}>\r\n                        Upload\r\n                    </Button>\r\n                </form>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState, useCallback, useEffect } from 'react';\r\nimport { albanianDict, serbianDict, englishDict } from 'utils/dictionaries';\r\n\r\n// import contentful\r\n\r\nimport * as contentful from 'contentful';\r\nimport axios from 'axios';\r\n\r\nconst client = contentful.createClient({\r\n    space: 'fhx9ruex8qil',\r\n    environment: 'master', // defaults to 'master' if not set\r\n    accessToken: 'm8zMuGqGsLqukyEk6vNttPNIA_KcpofbOpnbpQOd6W0'\r\n});\r\n\r\nconst LanguageContext = React.createContext();\r\nconst LanguageUpdateContext = React.createContext();\r\n\r\n// const fetchLanguage = async (language) => {\r\n//     const dict =\r\n//     return dict;\r\n// };\r\n\r\nexport const useLanguage = () => {\r\n    const context = React.useContext(LanguageContext);\r\n    if (context === undefined) {\r\n        throw new Error('useLanguage must be used within a LanguageProvider');\r\n    }\r\n    return context;\r\n};\r\n\r\nexport const useLanguageUpdate = () => {\r\n    const context = React.useContext(LanguageUpdateContext);\r\n    if (context === undefined) {\r\n        throw new Error('useLanguageUpdate must be used within a LanguageProvider');\r\n    }\r\n    return context;\r\n};\r\n\r\nconst getLanguageFromLocalStorage = () => {\r\n    const language = localStorage.getItem('language');\r\n    // check if language is in ['ALB', 'SRB', 'ENG']\r\n    if (language === 'ALB' || language === 'SRB' || language === 'ENG') {\r\n        return language;\r\n    }\r\n    return 'ALB';\r\n};\r\n\r\nexport default function ThemeProvider({ children }) {\r\n    const [language, setLanguage] = useState(getLanguageFromLocalStorage());\r\n\r\n    async function getDictionary(language) {\r\n        console.log(language);\r\n        // return fetchLanguage(language);\r\n        const dataKeys = {\r\n            ENG: '7gxtZA2NNgDmwQG5XWYeRF',\r\n            ALB: '43tie8cUoFzsbQhm4IZ7Jm',\r\n            SRB: '5qSorYzgu0O9Y8SLwj50SV'\r\n        };\r\n\r\n        const data = await (await client.getEntry(dataKeys[language])).fields.webContent;\r\n        console.log(data);\r\n        return data;\r\n        // if (language === 'ALB') {\r\n        //     console.log(fetchLanguage(language));\r\n        //     return fetchLanguage(language);\r\n        // }\r\n        // if (language === 'SRB') {\r\n        //     return serbianDict;\r\n        // }\r\n        // if (language === 'ENG') {\r\n        //     return englishDict;\r\n        // }\r\n        // return albanianDict;\r\n    }\r\n\r\n    const [dictionary, setDictionary] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const data = await getDictionary(language);\r\n            setDictionary(data);\r\n        };\r\n        fetchData();\r\n    }, [language]);\r\n\r\n    const changeLanguage = useCallback((language) => {\r\n        setLanguage(language);\r\n        const dictionary = getDictionary(language);\r\n        setDictionary(dictionary);\r\n        localStorage.setItem('language', language);\r\n        window.location.reload();\r\n    }, []);\r\n\r\n    if (!dictionary) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <LanguageContext.Provider value={{ language, dictionary }}>\r\n            <LanguageUpdateContext.Provider value={changeLanguage}>{children}</LanguageUpdateContext.Provider>\r\n        </LanguageContext.Provider>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { useLanguage } from '../../LanguageContext';\r\n\r\nrequire('highcharts/highcharts-more')(Highcharts);\r\nrequire('highcharts/modules/exporting')(Highcharts);\r\n\r\nexport default function Charts({ question, answers, selectedGraphType, displaySecond }) {\r\n    const { dictionary } = useLanguage();\r\n\r\n    const chartRef = React.createRef(null);\r\n\r\n    Highcharts.setOptions({\r\n        colors: [\r\n            'rgb(28, 91, 171)',\r\n            'rgb(221, 59, 54)',\r\n            'rgb(245, 212, 45)',\r\n            'rgb(112, 135, 127)',\r\n            'rgb(6, 167, 125)',\r\n            '#05B2DC',\r\n            '#CB48B7',\r\n            '#18f2b2',\r\n            '#ED7D3A',\r\n            '#FFA3AF'\r\n        ]\r\n    });\r\n\r\n    const resizeChart = () => {\r\n        if (chartRef.current) {\r\n            chartRef.current.chart.reflow();\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        resizeChart();\r\n    }, [displaySecond]);\r\n\r\n    function getChartOptions() {\r\n        let options = {\r\n            credits: {\r\n                enabled: false\r\n            },\r\n            title: {\r\n                text: question?.text\r\n            },\r\n            subtitle: {\r\n                text: dictionary.SOURCE\r\n            }\r\n        };\r\n\r\n        options = {\r\n            ...options,\r\n            chart: {\r\n                type: selectedGraphType\r\n            },\r\n            series: {\r\n                name: 'Answers',\r\n                data: answers.map((el) => ({\r\n                    name: el.category,\r\n                    y: el.percentage\r\n                }))\r\n            },\r\n            xAxis: [\r\n                {\r\n                    categories: answers.map((el) => el.category),\r\n                    animation: false\r\n                }\r\n            ],\r\n            yAxis: {\r\n                min: null,\r\n                max: null\r\n            },\r\n            plotOptions: {\r\n                packedbubble: {\r\n                    minSize: '30%',\r\n                    maxSize: '80%',\r\n                    layoutAlgorithm: {\r\n                        splitSeries: false,\r\n                        gravitationalConstant: 0.02\r\n                    },\r\n                    dataLabels: {\r\n                        animation: false,\r\n                        enabled: true\r\n                    }\r\n                },\r\n                column: {\r\n                    colorByPoint: true,\r\n                    // dataLabels: {\r\n                    //     enabled: false\r\n                    // },\r\n                    showInLegend: true,\r\n                    dataLabels: {\r\n                        enabled: true,\r\n                        format: '{point.y:.1f}%',\r\n                        style: {\r\n                            color: 'black',\r\n                            fontSize: '12px',\r\n                            fontWeight: 'normal'\r\n                        },\r\n                        inside: false\r\n                    }\r\n                },\r\n                pie: {\r\n                    innerSize: '60%',\r\n                    allowPointSelect: true,\r\n                    cursor: 'pointer',\r\n                    showInLegend: true,\r\n                    size: '100%',\r\n                    dataLabels: {\r\n                        enabled: true,\r\n                        format: '{point.name}: {point.y:.1f}%',\r\n                        style: {\r\n                            color: 'black',\r\n                            fontSize: '12px',\r\n                            fontWeight: 'normal'\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        if (selectedGraphType === 'stackedbar') {\r\n            options = {\r\n                chart: {\r\n                    type: 'bar'\r\n                },\r\n                series: answers.map((el) => ({\r\n                    name: el.category,\r\n                    data: [el.percentage]\r\n                })),\r\n                yAxis: {\r\n                    min: 0,\r\n                    max: 100\r\n                },\r\n                xAxis: [\r\n                    {\r\n                        categories: ['Answers']\r\n                    }\r\n                ],\r\n                plotOptions: {\r\n                    series: {\r\n                        stacking: 'normal'\r\n                    },\r\n                    stackedbar: {\r\n                        dataLabels: {\r\n                            enabled: false,\r\n                            format: '{point.y}%',\r\n                            style: {\r\n                                color: 'red',\r\n                                fontSize: '12px',\r\n                                fontWeight: 'normal'\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n        }\r\n        options.chart = {\r\n            ...options.chart,\r\n            animation: {\r\n                duration: 200\r\n            }\r\n        };\r\n        return options;\r\n    }\r\n    const [chartOptions, setChartOptions] = useState(getChartOptions());\r\n\r\n    useEffect(() => {\r\n        setChartOptions(null);\r\n        setChartOptions(getChartOptions());\r\n    }, [selectedGraphType, answers, question]);\r\n\r\n    return (\r\n        <div style={{ width: '90%' }}>\r\n            <HighchartsReact ref={chartRef} highcharts={Highcharts} options={chartOptions} />\r\n        </div>\r\n    );\r\n}\r\n","import { useState } from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport Charts from './graphs/Charts';\r\nimport Button from '@mui/material/Button';\r\nimport { InfinitySpin } from 'react-loader-spinner';\r\nimport SearchOffIcon from '@mui/icons-material/SearchOff';\r\nimport { useLanguage } from '../LanguageContext';\r\n\r\nrequire('highcharts/highcharts-more')(Highcharts);\r\nrequire('highcharts/modules/exporting')(Highcharts);\r\n\r\nexport default function Graphs({ question, answers, displaySecond, loading }) {\r\n    const { dictionary } = useLanguage();\r\n    const [selectedGraphType, setSelectedGraphType] = useState('column');\r\n    // const [graph, setGraph] = useState(null);\r\n\r\n    // useEffect(() => {\r\n    //     if (selectedGraphType === 'packedbubble') {\r\n    //         setGraph(<PieOrBarChart question={question} answers={answers} selectedGraphType={selectedGraphType} />);\r\n    //     } else if (selectedGraphType === 'stackedbar') {\r\n    //         setGraph(<StackedBarChart question={question} answers={answers} />);\r\n    //     } else {\r\n    //         setGraph(<PieOrBarChart question={question} answers={answers} selectedGraphType={selectedGraphType} />);\r\n    //     }\r\n    // }, [selectedGraphType]);\r\n\r\n    // const displayChart = () => {\r\n    //     if (selectedGraphType === 'packedbubble') {\r\n    //     }\r\n    //     return <Charts question={question} answers={answers} selectedGraphType={selectedGraphType} />;\r\n    // };\r\n    const graphTypes = [\r\n        {\r\n            type: 'pie',\r\n            label: 'Pie'\r\n        },\r\n        {\r\n            type: 'column',\r\n            label: 'Bar'\r\n        },\r\n        // {\r\n        //     type: 'packedbubble',\r\n        //     label: 'Bubble'\r\n        // },\r\n\r\n        {\r\n            type: 'stackedbar',\r\n            label: 'stacked bar'\r\n        }\r\n    ];\r\n\r\n    if (answers?.length < 1 || loading) {\r\n        return (\r\n            <div style={{ height: '200px', display: 'flex', alignItems: 'center' }}>\r\n                <InfinitySpin color=\"blue\" />\r\n            </div>\r\n        );\r\n    }\r\n    if (answers == null) {\r\n        return (\r\n            <div style={{ height: '200px', display: 'flex', alignItems: 'center' }}>\r\n                {dictionary.NO_ANSWERS} <SearchOffIcon style={{ marginLeft: 10 }} fontSize=\"large\" />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div\r\n            style={{\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                width: '100%',\r\n                alignItems: 'center',\r\n                alignSelf: 'stretch',\r\n                marginTop: '50px'\r\n            }}\r\n        >\r\n            <div style={{ display: 'flex', height: '100%', flexWrap: 'wrap', justifyContent: 'center' }}>\r\n                {graphTypes.map((graphType, index) => (\r\n                    <Button\r\n                        sx={{ marginLeft: 1, padding: '5px', paddingLeft: '12px', paddingRight: '12px', margin: '5px' }}\r\n                        variant=\"outlined\"\r\n                        type=\"submit\"\r\n                        backgroundColor=\"#ADD8E6\"\r\n                        key={index}\r\n                        onClick={() => setSelectedGraphType(graphType.type)}\r\n                    >\r\n                        {graphType.label}\r\n                    </Button>\r\n                ))}\r\n            </div>\r\n            <Charts question={question} answers={answers} selectedGraphType={selectedGraphType} displaySecond={displaySecond} />\r\n        </div>\r\n    );\r\n}\r\n","import Select from '@mui/material/Select';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { useLanguage } from 'LanguageContext';\r\n\r\nexport default function FilterBar({ filters, setFilters, filterOptions }) {\r\n    const languageContext = useLanguage();\r\n    const dict = languageContext.dictionary;\r\n    const handleChange = (filter, value) => {\r\n        setFilters({ ...filters, [filter]: value });\r\n    };\r\n    return (\r\n        <Row>\r\n            <Col lg={4} md={4} xs={6}>\r\n                <SelectForm\r\n                    value={filters.year}\r\n                    values={filterOptions.years}\r\n                    label={dict.YEAR_LABEL}\r\n                    handleChange={(e) => {\r\n                        handleChange('year', e.target.value);\r\n                    }}\r\n                />\r\n            </Col>\r\n            <Col lg={4} md={4} xs={6}>\r\n                <SelectForm\r\n                    value={filters.region}\r\n                    values={filterOptions.regions}\r\n                    label={dict.REGION_LABEL}\r\n                    handleChange={(e) => {\r\n                        handleChange('region', e.target.value);\r\n                    }}\r\n                />\r\n            </Col>\r\n\r\n            <Col lg={4} md={4} xs={6}>\r\n                <SelectForm\r\n                    value={filters.regionType}\r\n                    values={filterOptions.regionTypes}\r\n                    label={dict.REGION_TYPE_LABEL}\r\n                    handleChange={(e) => {\r\n                        handleChange('regionType', e.target.value);\r\n                    }}\r\n                />\r\n            </Col>\r\n\r\n            <Col lg={4} md={4} xs={6}>\r\n                <SelectForm\r\n                    value={filters.nationality}\r\n                    values={filterOptions.nationalities}\r\n                    label={dict.NATIONALITY_LABEL}\r\n                    handleChange={(e) => {\r\n                        handleChange('nationality', e.target.value);\r\n                    }}\r\n                />\r\n            </Col>\r\n\r\n            <Col lg={4} md={4} xs={6}>\r\n                <SelectForm\r\n                    value={filters.gender}\r\n                    values={filterOptions.genders}\r\n                    label={dict.GENDER_LABEL}\r\n                    handleChange={(e) => {\r\n                        handleChange('gender', e.target.value);\r\n                    }}\r\n                />\r\n            </Col>\r\n\r\n            <Col lg={4} md={4} xs={6}>\r\n                <SelectForm\r\n                    value={filters.age}\r\n                    values={filterOptions.ages}\r\n                    label={dict.AGE_LABEL}\r\n                    handleChange={(e) => {\r\n                        handleChange('age', e.target.value);\r\n                    }}\r\n                />\r\n            </Col>\r\n        </Row>\r\n    );\r\n}\r\n\r\nconst SelectForm = ({ value, values, label, handleChange }) => (\r\n    <FormControl sx={{ m: 1, width: '100%' }}>\r\n        <InputLabel id={`demo-simple-select-helper-label-${label}`}>{label}</InputLabel>\r\n        <Select\r\n            labelId={`demo-simple-select-helper-label-${label}`}\r\n            id={`demo-simple-select-helper-${label}`}\r\n            value={value}\r\n            label={label}\r\n            onChange={handleChange}\r\n            style={{ borderRadius: '9px', width: '100%' }}\r\n        >\r\n            {values.map((el) => (\r\n                <MenuItem value={el} key={el}>\r\n                    {el}\r\n                </MenuItem>\r\n            ))}\r\n        </Select>\r\n    </FormControl>\r\n);\r\n","import { useState, useEffect } from 'react';\r\nimport Graphs from './Graphs';\r\nimport axios from 'axios';\r\nimport FilterBar from './FilterBar';\r\nimport { Box, Divider } from '@mui/material';\r\nimport { useLanguage } from '../LanguageContext';\r\n\r\nexport default function DashboardGraph({ selectedQuestion, country, selectedLanguage, displaySecond, setCountryMask }) {\r\n    const [answers, setAnswers] = useState([]);\r\n    const { dictionary } = useLanguage();\r\n\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    const [filters, setFilters] = useState({\r\n        year: 2022,\r\n        region: dictionary.ALL,\r\n        regionType: dictionary.ALL,\r\n        nationality: dictionary.ALL,\r\n        gender: dictionary.ALL,\r\n        age: dictionary.ALL\r\n    });\r\n\r\n    function getFilters() {\r\n        if (!dictionary) return {};\r\n        if (country === 'Kosovo') {\r\n            return {\r\n                years: dictionary.YEARS,\r\n                regions: dictionary.KOSOVO_REGIONS,\r\n                regionTypes: dictionary.REGION_TYPES_KS,\r\n                nationalities: dictionary.KOSOVO_NATIONALITIES,\r\n                genders: dictionary.GENDERS,\r\n                ages: [dictionary.ALL, '18-25', '26-35', '36-45', '46-55', '56-65', '65+']\r\n            };\r\n        }\r\n        if (country === 'Albania') {\r\n            return {\r\n                years: dictionary.YEARS,\r\n                regions: dictionary.ALBANIA_REGIONS,\r\n                regionTypes: dictionary.REGION_TYPES,\r\n                nationalities: dictionary.ALBANIA_NATIONALITIES,\r\n                genders: dictionary.GENDERS,\r\n                ages: [dictionary.ALL, '18-25', '26-35', '36-45', '46-55', '56-65', '65+']\r\n            };\r\n        }\r\n        const filters = {\r\n            years: dictionary.YEARS,\r\n            regions: dictionary.SERBIA_REGIONS,\r\n            regionTypes: dictionary.REGION_TYPES,\r\n            nationalities: dictionary.SERBIA_NATIONALITIES,\r\n            genders: dictionary.GENDERS,\r\n            ages: [dictionary.ALL, '18-25', '26-35', '36-45', '46-55', '56-65', '65+']\r\n        };\r\n        return filters;\r\n    }\r\n\r\n    const [filterOptions, setFilterOptions] = useState(getFilters());\r\n\r\n    useEffect(() => {\r\n        setFilterOptions(getFilters());\r\n    }, [dictionary, country]);\r\n\r\n    function editCountryMask(data) {\r\n        const countries = data.countries;\r\n        const arr = [false, false, false];\r\n        if (countries.includes('Albania')) {\r\n            arr[0] = true;\r\n        }\r\n        if (countries.includes('Kosovo')) {\r\n            arr[1] = true;\r\n        }\r\n        if (countries.includes('Serbia')) {\r\n            arr[2] = true;\r\n        }\r\n        setCountryMask(arr);\r\n    }\r\n    useEffect(() => {\r\n        if (!selectedQuestion?.id) return;\r\n        const params = Object.entries(filters).reduce((acc, [key, value]) => {\r\n            if (value !== dictionary.ALL) {\r\n                acc[key] = value;\r\n            }\r\n            return acc;\r\n        }, {});\r\n        params.questionId = selectedQuestion.id || 1;\r\n        params.country = country;\r\n        params.language = selectedLanguage;\r\n        setLoading(true);\r\n\r\n        axios.get('/api/answer', { params }).then((response) => {\r\n            if (response.data?.breakdown?.length === 0) {\r\n                setAnswers(null);\r\n                editCountryMask(response.data);\r\n            } else {\r\n                setAnswers(response.data.breakdown);\r\n                if (setCountryMask) {\r\n                    editCountryMask(response.data);\r\n                }\r\n            }\r\n            setLoading(false);\r\n        });\r\n    }, [filters, country, selectedQuestion]);\r\n\r\n    return (\r\n        <Box\r\n            style={{\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                alignItems: 'center',\r\n                backgroundColor: '#fff',\r\n                borderRadius: '4px',\r\n                boxShadow: '0px 2px 1px -1px rgb(0 0 0 / 20%), 0px 1px 1px 0px rgb(0 0 0 / 14%), 0px 1px 3px 0px rgb(0 0 0 / 12%)',\r\n                flexGrow: 1\r\n            }}\r\n        >\r\n            <Box sx={{ backgroundColor: '#fff', marginTop: 3, marginLeft: 3, marginRight: 3, marginBottom: 1 }}>\r\n                <FilterBar dictionary={dictionary} filters={filters} setFilters={setFilters} filterOptions={filterOptions} />\r\n            </Box>\r\n            <Divider style={{ width: '95%' }} />\r\n            <Graphs question={selectedQuestion} answers={answers} displaySecond={displaySecond} loading={loading} />\r\n        </Box>\r\n    );\r\n}\r\n","import { useState, useEffect } from 'react';\r\n\r\nfunction getWindowDimensions() {\r\n    const { innerWidth: width, innerHeight: height } = window;\r\n    return {\r\n        width,\r\n        height\r\n    };\r\n}\r\n\r\nexport default function useWindowDimensions() {\r\n    const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\r\n\r\n    useEffect(() => {\r\n        function handleResize() {\r\n            setWindowDimensions(getWindowDimensions());\r\n        }\r\n\r\n        window.addEventListener('resize', handleResize);\r\n        return () => window.removeEventListener('resize', handleResize);\r\n    }, []);\r\n\r\n    return windowDimensions;\r\n}\r\n","import { useState } from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport List from '@mui/material/List';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemText from '@mui/material/ListItemText';\r\n\r\nimport { ListSubheader } from '@mui/material';\r\nimport { ExpandLess, ExpandMore } from '@mui/icons-material';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport useWindowDimensions from '../utils/useWindowDimensions';\r\n\r\nconst drawerWidth = 240;\r\n\r\nexport default function ResponsiveDrawer({ categories, selectedQuestion, setSelectedQuestion, drawerOpen }) {\r\n    const { width } = useWindowDimensions();\r\n\r\n    return (\r\n        <Box style={{ display: 'flex', flexDirection: 'column' }}>\r\n            <Box\r\n                component=\"nav\"\r\n                sx={{ position: '', width: { sm: drawerWidth }, flexShrink: { sm: 0 } }}\r\n                aria-label=\"mailbox folders\"\r\n                className=\"question-drawer\"\r\n                display={width > 768 || drawerOpen ? 'block' : 'none'}\r\n            >\r\n                <List\r\n                    sx={{ width: '100%', maxWidth: 360, bgcolor: 'background.paper' }}\r\n                    component=\"nav\"\r\n                    aria-labelledby=\"nested-list-subheader\"\r\n                    subheader={\r\n                        <ListSubheader component=\"div\" id=\"nested-list-subheader\">\r\n                            {/* Nested List Items */}\r\n                            WBSB\r\n                        </ListSubheader>\r\n                    }\r\n                >\r\n                    {categories.map((category, index) => (\r\n                        <Category\r\n                            key={index}\r\n                            category={category}\r\n                            setSelectedQuestion={setSelectedQuestion}\r\n                            selectedQuestion={selectedQuestion}\r\n                        />\r\n                    ))}\r\n                </List>\r\n            </Box>\r\n        </Box>\r\n    );\r\n}\r\n\r\nconst Category = ({ category, setSelectedQuestion, selectedQuestion }) => {\r\n    const [open, setOpen] = useState(false);\r\n    return (\r\n        <>\r\n            <ListItemButton\r\n                onClick={(e) => {\r\n                    setOpen((curr) => !curr);\r\n                    e.stopPropagation();\r\n                }}\r\n                className=\"category\"\r\n            >\r\n                {/* <ListItemIcon>\r\n                    <InboxIcon />\r\n                </ListItemIcon> */}\r\n                <ListItemText primary={category.category} />\r\n                {open ? <ExpandLess /> : <ExpandMore />}\r\n            </ListItemButton>\r\n            <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n                {category.questions.map((q, index) => (\r\n                    <List\r\n                        key={index}\r\n                        component=\"div\"\r\n                        disablePadding\r\n                        style={{ backgroundColor: q?.id === selectedQuestion?.id ? '#e3f2fd' : '' }}\r\n                    >\r\n                        <ListItemButton\r\n                            sx={{ pl: 4 }}\r\n                            onClick={() => {\r\n                                setSelectedQuestion(q);\r\n                            }}\r\n                        >\r\n                            {/* <ListItemIcon>\r\n                                <ArrowForwardIosIcon />\r\n                            </ListItemIcon> */}\r\n                            <ListItemText primary={` - ${q.text}`} />\r\n                        </ListItemButton>\r\n                    </List>\r\n                ))}\r\n            </Collapse>\r\n        </>\r\n    );\r\n};\r\n","import { Button, Box } from '@mui/material';\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport DashboardGraph from './DashboardGraph';\r\nimport MiniDrawer from './MiniDrawer';\r\nimport axios from 'axios';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport useWindowDimensions from 'utils/useWindowDimensions';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport { useLanguage } from '../LanguageContext';\r\n\r\nexport default function Dashboard() {\r\n    const { language, dictionary } = useLanguage();\r\n    const { width } = useWindowDimensions();\r\n    const [countries] = useState(['Albania', 'Kosovo', 'Serbia']);\r\n    const [countryMask, setCountryMask] = useState([true, true, true]);\r\n    const countriesLabel = [dictionary.ALBANIA, dictionary.KOSOVO, dictionary.SERBIA];\r\n    const [displaySecond, setDisplaySecond] = useState(false);\r\n    const [questions, setQuestions] = useState([]);\r\n    const [selectedQuestion, setSelectedQuestion] = useState({});\r\n    const [selectedCountry, setSelectedCountry] = useState('Kosovo');\r\n\r\n    // const [selectedLanguage, setSelectedLanguage] = useState('ALB');\r\n\r\n    useEffect(() => {\r\n        if (countryMask[countries.indexOf(selectedCountry)] === false) {\r\n            setSelectedCountry(countries[countryMask.indexOf(true)]);\r\n        }\r\n    }, [countryMask]);\r\n    const ref = useRef(null);\r\n\r\n    const chartComponent = useRef(null);\r\n\r\n    const [drawerOpen, setDrawerOpen] = useState(false);\r\n    const drawerWidth = 240;\r\n    function findQuestionById(categoryArray, id) {\r\n        let question = {};\r\n        for (let i = 0; i < categoryArray.length; i += 1) {\r\n            for (let j = 0; j < categoryArray[i].questions.length; j += 1) {\r\n                if (categoryArray[i].questions[j].id === id) {\r\n                    question = categoryArray[i].questions[j];\r\n                    setSelectedQuestion(question);\r\n\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!id) {\r\n            setSelectedQuestion(categoryArray[0]?.questions[0]);\r\n            return;\r\n        }\r\n        setSelectedQuestion(categoryArray[0]?.questions[0]);\r\n    }\r\n\r\n    function mergeCategories(categories) {\r\n        // The data comes in the form of an array of categories, each category has an array of questions\r\n        // Some categories have the same name, but start with 3 different first characters. These need to be merged. The first 3 characters dictate the order of the categories\r\n\r\n        // First, we need to find the categories that need to be merged\r\n        const categoriesToMerge = {};\r\n        for (let i = 0; i < categories.length; i += 1) {\r\n            const category = categories[i].category;\r\n            if (categoriesToMerge[category.substring(3)]) {\r\n                categoriesToMerge[category.substring(3)].questions = categoriesToMerge[category.substring(3)].questions.concat(\r\n                    categories[i].questions\r\n                );\r\n            } else {\r\n                categoriesToMerge[category.substring(3)] = categories[i];\r\n            }\r\n        }\r\n\r\n        // Now we need to sort the categories by the category name\r\n        const sortedCategories = Object.values(categoriesToMerge).sort((a, b) => {\r\n            if (a.category < b.category) {\r\n                return -1;\r\n            }\r\n            if (a.category > b.category) {\r\n                return 1;\r\n            }\r\n            return 0;\r\n        });\r\n\r\n        sortedCategories.forEach((category) => {\r\n            category.questions.sort((a, b) => {\r\n                if (a.text < b.text) {\r\n                    return -1;\r\n                }\r\n                if (a.text > b.text) {\r\n                    return 1;\r\n                }\r\n                return 0;\r\n            });\r\n        });\r\n\r\n        // remove the first 3 characters from the category name\r\n        sortedCategories.forEach((category) => {\r\n            category.category = category.category.substring(3);\r\n        });\r\n\r\n        // now sort the questions by the question rank\r\n        sortedCategories.forEach((category) => {\r\n            category.questions.sort((a, b) => {\r\n                if (a.rank < b.rank) {\r\n                    return -1;\r\n                }\r\n                if (a.rank > b.rank) {\r\n                    return 1;\r\n                }\r\n                return 0;\r\n            });\r\n        });\r\n\r\n        return sortedCategories;\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios.get('/api/questions', { params: { language } }).then((response) => {\r\n            const data = mergeCategories(response.data);\r\n            setQuestions(data);\r\n            findQuestionById(data, selectedQuestion?.id);\r\n        });\r\n    }, [language]);\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('click', (e) => {\r\n            if (!(ref?.current?.contains(e.target) || e.target.classList?.contains('category'))) {\r\n                setDrawerOpen(false);\r\n            }\r\n        });\r\n\r\n        return () => {\r\n            document.removeEventListener('click', () => {});\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <Box sx={{ display: 'flex' }}>\r\n            <MiniDrawer\r\n                categories={questions}\r\n                selectedQuestion={selectedQuestion}\r\n                setSelectedQuestion={setSelectedQuestion}\r\n                selectedCountry={selectedCountry}\r\n                setSelectedCountry={setSelectedCountry}\r\n                selectedLanguage={language}\r\n                // setSelectedLanguage={setSelectedLanguage}\r\n                drawerOpen={drawerOpen}\r\n            />\r\n            <Box\r\n                component=\"main\"\r\n                className=\"graph-wrapper\"\r\n                sx={{\r\n                    borderRadius: '10px 10px 10px 10px',\r\n                    backgroundColor: '#e3f2fd',\r\n                    flexGrow: 1,\r\n                    width: { sm: `calc(100% - ${drawerWidth}px)` }\r\n                }}\r\n            >\r\n                <Button\r\n                    variant=\"contained\"\r\n                    type=\"button\"\r\n                    className=\"drawer-button\"\r\n                    style={{\r\n                        display: width < 768 ? 'block' : 'none',\r\n                        backgroundColor: '#1976d2',\r\n                        color: 'white',\r\n                        borderRadius: '0px 5px 5px 0px',\r\n                        marginBottom: '10px',\r\n                        left: '0px',\r\n                        position: 'absolute'\r\n                    }}\r\n                    ref={ref}\r\n                    onClick={() => {\r\n                        setDrawerOpen(!drawerOpen);\r\n                    }}\r\n                >\r\n                    {/* Questions */}\r\n                    <MenuIcon />\r\n                </Button>\r\n                <Box className=\"data-section\" style={{ zIndez: 3 }}>\r\n                    <Row className=\"country-select\">\r\n                        {countries.map(\r\n                            (country, index) =>\r\n                                countryMask[index] && (\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        type=\"button\"\r\n                                        className={`btn country-option ${selectedCountry === country ? 'selected-country' : ''}`}\r\n                                        onClick={() => setSelectedCountry(country)}\r\n                                    >\r\n                                        {countriesLabel[index]}\r\n                                    </Button>\r\n                                )\r\n                        )}\r\n                    </Row>\r\n                    <Row>\r\n                        <Col lg={displaySecond ? 6 : 12} md={12} sm={12}>\r\n                            <DashboardGraph\r\n                                ref={chartComponent}\r\n                                country={selectedCountry}\r\n                                selectedQuestion={selectedQuestion}\r\n                                selectedLanguage={language}\r\n                                displaySecond={displaySecond}\r\n                                countryMask={countryMask}\r\n                                setCountryMask={setCountryMask}\r\n                            />\r\n                        </Col>\r\n                        {displaySecond ? (\r\n                            <>\r\n                                <Col lg={6} md={12} sm={12}>\r\n                                    <div className=\"dashboard\">\r\n                                        <DashboardGraph\r\n                                            country={selectedCountry}\r\n                                            selectedQuestion={selectedQuestion}\r\n                                            selectedLanguage={language}\r\n                                            // displaySecond={displaySecond}\r\n                                        />\r\n                                    </div>\r\n                                    <div>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            type=\"button\"\r\n                                            onClick={() => {\r\n                                                setDisplaySecond(false);\r\n                                            }}\r\n                                            style={{ borderRadius: '0px 0px 12px 12px', backgroundColor: '#ed5e68' }}\r\n                                            endIcon={<DeleteIcon />}\r\n                                        >\r\n                                            {dictionary.DELETE}\r\n                                        </Button>\r\n                                    </div>\r\n                                </Col>\r\n                            </>\r\n                        ) : (\r\n                            <div>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    type=\"button\"\r\n                                    onClick={() => {\r\n                                        setDisplaySecond(true);\r\n                                    }}\r\n                                    style={{ borderRadius: '0px 0px 12px 12px', marginLeft: '15px' }}\r\n                                    endIcon={<AddIcon />}\r\n                                >\r\n                                    {dictionary.COMPARE}\r\n                                </Button>\r\n                            </div>\r\n                        )}\r\n                    </Row>\r\n                </Box>\r\n            </Box>\r\n        </Box>\r\n    );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/logo.997a89a1.png\";","export default __webpack_public_path__ + \"static/media/logo-csdg.ffb40adb.jpg\";","export default __webpack_public_path__ + \"static/media/logo-bcsp.3ce84dae.png\";","export default __webpack_public_path__ + \"static/media/qkss-logo.f1457e3c.png\";","import { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Col } from 'react-bootstrap';\r\nimport { Card, CardMedia, CardContent, Typography } from '@mui/material';\r\nimport fileDownload from 'js-file-download';\r\nimport { Link } from 'react-router-dom';\r\nimport { useLanguage } from './LanguageContext';\r\n\r\nexport default function PublicationList({ listSize, year, setYears }) {\r\n    const [publications, setPublications] = useState([]);\r\n    const { language, dictionary } = useLanguage();\r\n\r\n    let baseURL = '';\r\n    if (process.env.NODE_ENV === 'development') {\r\n        baseURL = 'http://localhost:8080';\r\n    } else {\r\n        baseURL = '';\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios\r\n            .get('/api/publication', { params: { language } })\r\n            .then((res) => {\r\n                setPublications(res.data.slice(0, listSize));\r\n                if (setYears) {\r\n                    // get unique years from res.data\r\n                    const years = [...new Set(res.data.map((item) => item.date.slice(0, 4)))];\r\n                    setYears(years);\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }, [language]);\r\n    function handleDownload(name, id) {\r\n        axios.get(`/files/${id}.pdf`, { responseType: 'blob' }).then((response) => {\r\n            fileDownload(response.data, `${name}.pdf`);\r\n        });\r\n    }\r\n\r\n    function getPublications() {\r\n        if (year && year !== 0 && year !== '0') {\r\n            return publications.filter((pub) => pub.date.slice(0, 4) === String(year));\r\n        }\r\n        return publications;\r\n    }\r\n    return (\r\n        <>\r\n            {getPublications().map((publication, index) => (\r\n                <Col lg={4} md={6} sm={12} key={index} style={{ marginTop: '25px', maxHeight: '100%' }}>\r\n                    <Card className=\"publication-card\" style={{ display: 'flex', flexDirection: 'column' }}>\r\n                        <CardMedia\r\n                            // style={{ padding: '30px 30px 30px 30px' }}\r\n                            component=\"img\"\r\n                            image={`${baseURL}/images/${publication.imagePath}`}\r\n                            alt=\"green iguana\"\r\n                        />\r\n                        <CardContent style={{ marginTop: '10px', width: '100%', display: 'flex', flexDirection: 'column', flex: 1 }}>\r\n                            <Typography\r\n                                onClick={() => {\r\n                                    handleDownload(publication.title, publication.id);\r\n                                }}\r\n                                gutterBottom\r\n                                variant=\"h6\"\r\n                                className=\"clickable\"\r\n                                component=\"div\"\r\n                                style={{ color: '#185faf' }}\r\n                            >\r\n                                {publication.title}\r\n                            </Typography>\r\n                            <div style={{ color: '#185faf', marginTop: 'auto', marginBottom: 0 }}>\r\n                                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                                    {publication.date.slice(0, 7)}\r\n                                </Typography>\r\n                                <Link\r\n                                    to=\"\"\r\n                                    onClick={() => {\r\n                                        handleDownload(publication.title, publication.id);\r\n                                    }}\r\n                                >\r\n                                    {dictionary.DOWNLOAD}\r\n                                </Link>\r\n                            </div>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Col>\r\n            ))}\r\n        </>\r\n    );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/donor.d4a87bb2.png\";","/* eslint-disable prefer-template */\r\nimport { useEffect, useState } from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { useLanguage } from '../../LanguageContext';\r\nimport axios from 'axios';\r\nimport { InfinitySpin } from 'react-loader-spinner';\r\n\r\nrequire('highcharts/highcharts-more')(Highcharts);\r\nrequire('highcharts/modules/exporting')(Highcharts);\r\n\r\nexport default function SingleQuestionChart() {\r\n    const { language } = useLanguage();\r\n    const [question, setQuestion] = useState({ text: '' });\r\n    const [answers, setAnswers] = useState([]);\r\n    const selectedGraphType = 'column';\r\n\r\n    useEffect(() => {\r\n        axios\r\n            .get('/api/questions/' + Math.floor(Math.random() * 220), {\r\n                params: {\r\n                    language,\r\n                    country: 'Kosovo'\r\n                }\r\n            })\r\n            .then((res) => {\r\n                setQuestion(res.data);\r\n\r\n                axios\r\n                    .get(`/api/answer`, {\r\n                        params: {\r\n                            language,\r\n                            country: 'Kosovo',\r\n                            questionId: res.data.id\r\n                        }\r\n                    })\r\n                    .then((res) => {\r\n                        setAnswers(res.data.breakdown);\r\n                    });\r\n            });\r\n    }, [language]);\r\n\r\n    function getChartOptions() {\r\n        let options = {\r\n            credits: {\r\n                enabled: false\r\n            },\r\n            title: {\r\n                text: question?.text\r\n            }\r\n        };\r\n\r\n        options = {\r\n            ...options,\r\n            chart: {\r\n                type: selectedGraphType\r\n            },\r\n            series: {\r\n                data: answers.map((el) => ({\r\n                    name: el.category,\r\n                    y: el.percentage\r\n                }))\r\n            },\r\n            navigation: {\r\n                buttonOptions: {\r\n                    enabled: false\r\n                }\r\n            },\r\n            yAxis: {\r\n                title: false\r\n            },\r\n            xAxis: [\r\n                {\r\n                    categories: answers.map((el) => el.category),\r\n                    animation: false,\r\n                    labels: {\r\n                        rotation: 0,\r\n                        whiteSpace: 'wrap'\r\n                    }\r\n                }\r\n            ],\r\n            legend: { enabled: false },\r\n            plotOptions: {\r\n                packedbubble: {\r\n                    minSize: '30%',\r\n                    maxSize: '80%',\r\n                    layoutAlgorithm: {\r\n                        splitSeries: false,\r\n                        gravitationalConstant: 0.02\r\n                    }\r\n                    // dataLabels: {\r\n                    //     animation: false,\r\n                    //     enabled: true\r\n                    // }\r\n                },\r\n                column: {\r\n                    colorByPoint: true,\r\n                    // dataLabels: {\r\n                    //     enabled: false\r\n                    // },\r\n                    dataLabels: {\r\n                        enabled: false,\r\n                        format: '{point.y:.1f}%',\r\n                        style: {\r\n                            color: 'black',\r\n                            fontSize: '12px',\r\n                            fontWeight: 'normal'\r\n                        },\r\n                        inside: false\r\n                    }\r\n                },\r\n                pie: {\r\n                    innerSize: '60%',\r\n                    allowPointSelect: true,\r\n                    cursor: 'pointer',\r\n                    size: '100%',\r\n                    dataLabels: {\r\n                        enabled: false,\r\n                        format: '{point.name}: {point.y:.1f}%',\r\n                        style: {\r\n                            color: 'black',\r\n                            fontSize: '12px',\r\n                            fontWeight: 'normal'\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        return options;\r\n    }\r\n    const [chartOptions, setChartOptions] = useState(getChartOptions());\r\n\r\n    useEffect(() => {\r\n        Highcharts.setOptions({\r\n            colors: [\r\n                'rgb(28, 91, 171)',\r\n                'rgb(221, 59, 54)',\r\n                'rgb(245, 212, 45)',\r\n                'rgb(112, 135, 127)',\r\n                'rgb(6, 167, 125)',\r\n                '#05B2DC',\r\n                '#CB48B7',\r\n                '#18f2b2',\r\n                '#ED7D3A',\r\n                '#FFA3AF'\r\n            ]\r\n            // responsive: {\r\n            //     rules: [\r\n            //         {\r\n            //             condition: {\r\n            //                 maxHeight: '300px'\r\n            //             }\r\n            //         }\r\n            //     ]\r\n            // }\r\n        });\r\n        setChartOptions(null);\r\n        setChartOptions(getChartOptions());\r\n    }, [question, answers]);\r\n\r\n    if (!(question.id && answers.length)) {\r\n        return (\r\n            <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '350px' }}>\r\n                <InfinitySpin color=\"white\" />\r\n            </div>\r\n        );\r\n    }\r\n    return (\r\n        <div\r\n            style={{\r\n                width: 'auto',\r\n                height: '350px',\r\n                marginTop: '30px',\r\n                marginBottom: '30px',\r\n                borderRadius: '8px',\r\n                padding: '10px',\r\n                background: 'white',\r\n                boxShadow: '0px 3px 1px -2px rgb(0 0 0 / 20%), 0px 2px 2px 0px rgb(0 0 0 / 14%), 0px 1px 5px 0px rgb(0 0 0 / 0%)'\r\n            }}\r\n        >\r\n            <HighchartsReact highcharts={Highcharts} options={chartOptions} containerProps={{ style: { height: '100%' } }} />\r\n        </div>\r\n    );\r\n}\r\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\r\n/* eslint-disable jsx-a11y/click-events-have-key-events */\r\nimport { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Chip, Typography, Divider } from '@mui/material';\r\nimport { Container, Col, Row } from 'react-bootstrap';\r\nimport ArrowLeftIcon from '@mui/icons-material/ArrowLeft';\r\nimport ArrowRightIcon from '@mui/icons-material/ArrowRight';\r\n\r\nimport logo from '../assets/images/logo.png';\r\nimport csdgLogo from '../assets/images/logo-csdg.jpg';\r\nimport bcspLogo from '../assets/images/logo-bcsp.png';\r\nimport { useLanguage } from '../LanguageContext';\r\nimport qkssLogo from '../assets/images/qkss-logo.png';\r\nimport PublicationList from 'PublicationList';\r\nimport donor from '../assets/images/donor.png';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport 'swiper/swiper-bundle.min.css';\r\nimport 'swiper/swiper.scss';\r\nimport SwiperCore, { Autoplay, Pagination } from 'swiper';\r\nimport SingleQuestionChart from './graphs/SingleQuestionChart';\r\n\r\nexport default function Homepage() {\r\n    const { language, dictionary } = useLanguage();\r\n    SwiperCore.use([Autoplay]);\r\n    function updatePartners() {\r\n        return [\r\n            {\r\n                name: dictionary.PARTNER0,\r\n                logo: qkssLogo,\r\n                link: 'https://www.qkss.org/',\r\n                description: dictionary.PARTNER0_DESC\r\n            },\r\n            {\r\n                name: dictionary.PARTNER1,\r\n                logo: bcspLogo,\r\n                link: 'https://bezbednost.org/en/',\r\n                description: dictionary.PARTNER1_DESC\r\n            },\r\n            {\r\n                name: dictionary.PARTNER2,\r\n                logo: csdgLogo,\r\n                link: 'https://www.csdg.org/',\r\n                description: dictionary.PARTNER2_DESC\r\n            }\r\n        ];\r\n    }\r\n\r\n    const [partners, setPartners] = useState(updatePartners());\r\n\r\n    useEffect(() => {\r\n        setPartners(updatePartners());\r\n    }, [language]);\r\n    useEffect(() => {\r\n        const observer = new IntersectionObserver((entries) => {\r\n            entries.forEach((entry) => {\r\n                if (entry.isIntersecting) {\r\n                    entry.target.classList.add('show');\r\n                } else {\r\n                    entry.target.classList.remove('show');\r\n                }\r\n            });\r\n        });\r\n\r\n        const hiddenElements = document.querySelectorAll('.hidden');\r\n        hiddenElements.forEach((el) => observer.observe(el));\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"homepage\">\r\n            <Container fluid className=\"homepage-header\">\r\n                <Row className=\"homepage-banner\">\r\n                    <Col lg={6} md={12} sm={12} className=\"banner-text\">\r\n                        <span className=\"title\">{dictionary.TITLE}</span>\r\n                        <Link className=\"redirect-link\" to=\"te-dhenat\">\r\n                            {dictionary.EXPLORE} ➜\r\n                        </Link>\r\n                    </Col>\r\n                    <Col lg={5} md={12} sm={12}>\r\n                        <Swiper\r\n                            pagination\r\n                            modules={[Pagination]}\r\n                            spaceBetween={50}\r\n                            slidesPerView={1}\r\n                            autoplay={{\r\n                                delay: 8000\r\n                            }}\r\n                        >\r\n                            <SwiperSlide style={{ padding: '15px' }}>\r\n                                <SingleQuestionChart />\r\n                            </SwiperSlide>\r\n                            <SwiperSlide style={{ padding: '15px' }}>\r\n                                <SingleQuestionChart />\r\n                            </SwiperSlide>\r\n                            <SwiperSlide style={{ padding: '15px' }}>\r\n                                <SingleQuestionChart />\r\n                            </SwiperSlide>\r\n                        </Swiper>\r\n                    </Col>\r\n                </Row>\r\n                <div\r\n                    className=\"homepage-subbanner\"\r\n                    style={{\r\n                        display: 'flex',\r\n                        flexWrap: 'wrap',\r\n                        justifyContent: 'center',\r\n                        color: 'white',\r\n                        fontSize: '26px',\r\n                        fontWeight: '600'\r\n                    }}\r\n                >\r\n                    <span\r\n                        className=\"spanText\"\r\n                        onClick={() => {\r\n                            document.querySelector('#methodology-section').scrollIntoView({ behavior: 'smooth' });\r\n                        }}\r\n                    >\r\n                        {dictionary.METHODOLOGY}\r\n                    </span>\r\n\r\n                    <span\r\n                        className=\"spanText\"\r\n                        onClick={() => {\r\n                            document.querySelector('#about-section').scrollIntoView({ behavior: 'smooth' });\r\n                        }}\r\n                    >\r\n                        {dictionary.ABOUT_WBSB}\r\n                    </span>\r\n\r\n                    <span\r\n                        className=\"spanText\"\r\n                        onClick={() => {\r\n                            document.querySelector('#partner-section').scrollIntoView({ behavior: 'smooth' });\r\n                        }}\r\n                    >\r\n                        {dictionary.PARTNERS}\r\n                    </span>\r\n\r\n                    <span\r\n                        className=\"spanText\"\r\n                        onClick={() => {\r\n                            document.querySelector('#donor-section').scrollIntoView({ behavior: 'smooth' });\r\n                        }}\r\n                    >\r\n                        {dictionary.DONOR}\r\n                    </span>\r\n                    <span\r\n                        className=\"spanText\"\r\n                        onClick={() => {\r\n                            document.querySelector('#publication-section').scrollIntoView({ behavior: 'smooth' });\r\n                        }}\r\n                    >\r\n                        {dictionary.PUBLICATION}\r\n                    </span>\r\n                </div>\r\n            </Container>\r\n            <Container id=\"methodology-section\" fluid className=\"section\" style={{ marginTop: '0px' }}>\r\n                <div style={{ maxWidth: '1240px' }}>\r\n                    <h1 style={{ marginBottom: 10, marginTop: 20, fontSize: '40px' }} className=\"section-title\">\r\n                        {dictionary.METHODOLOGY}\r\n                    </h1>\r\n                    <hr />\r\n                    <Row style={{ margin: 'auto', maxWidth: 1240, marginTop: '35px' }}>\r\n                        <Col\r\n                            lg={{ span: 5, offset: 0 }}\r\n                            md={12}\r\n                            sm={12}\r\n                            className=\"banner-text\"\r\n                            style={{ display: 'flex', flexDirection: 'row' }}\r\n                        >\r\n                            <div className=\"hidden methodologyd1\">\r\n                                <Typography variant=\"body2\" style={{ fontSize: '18px' }}>\r\n                                    {dictionary.METHODOLOGY_DESC1}\r\n                                </Typography>\r\n                            </div>\r\n                        </Col>\r\n                        <Col className=\"chip\" lg={2}>\r\n                            <Divider orientation=\"vertical\">\r\n                                <Chip label={<ArrowLeftIcon />} />\r\n                            </Divider>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row style={{ margin: 'auto', maxWidth: 1240 }}>\r\n                        <Col className=\"chip\" lg={{ span: 2, offset: 5 }}>\r\n                            <Divider orientation=\"vertical\">\r\n                                <Chip label={<ArrowRightIcon />} />\r\n                            </Divider>\r\n                        </Col>\r\n                        <Col lg={{ span: 5 }} md={12} sm={12} className=\"banner-text\" style={{ display: 'flex', flexDirection: 'row' }}>\r\n                            <div className=\"hidden methodologyd2\">\r\n                                <Typography variant=\"body2\" style={{ fontSize: '18px' }}>\r\n                                    {dictionary.METHODOLOGY_DESC2}\r\n                                </Typography>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row style={{ margin: 'auto', maxWidth: 1240 }}>\r\n                        <Col\r\n                            lg={{ span: 5, offset: 0 }}\r\n                            md={12}\r\n                            sm={12}\r\n                            className=\"banner-text\"\r\n                            style={{ display: 'flex', flexDirection: 'row' }}\r\n                        >\r\n                            <div className=\"hidden methodologyd1\">\r\n                                <Typography variant=\"body2\" style={{ fontSize: '18px' }}>\r\n                                    {dictionary.METHODOLOGY_DESC3}\r\n                                </Typography>\r\n                            </div>\r\n                        </Col>\r\n                        <Col className=\"chip\" lg={2}>\r\n                            <Divider orientation=\"vertical\">\r\n                                <Chip label={<ArrowLeftIcon />} />\r\n                            </Divider>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row style={{ margin: 'auto', maxWidth: 1240 }}>\r\n                        <Col className=\"chip\" lg={{ span: 2, offset: 5 }}>\r\n                            <Divider orientation=\"vertical\">\r\n                                <Chip label={<ArrowRightIcon />} />\r\n                            </Divider>\r\n                        </Col>\r\n                        <Col lg={{ span: 5 }} md={12} sm={12} className=\"banner-text\" style={{ display: 'flex', flexDirection: 'row' }}>\r\n                            <div className=\"hidden methodologyd2\">\r\n                                <Typography variant=\"body2\" style={{ fontSize: '18px' }}>\r\n                                    {dictionary.METHODOLOGY_DESC4}\r\n                                </Typography>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row style={{ margin: 'auto', maxWidth: 1240 }}>\r\n                        <Col\r\n                            lg={{ span: 5, offset: 0 }}\r\n                            md={12}\r\n                            sm={12}\r\n                            className=\"banner-text\"\r\n                            style={{ display: 'flex', flexDirection: 'row' }}\r\n                        >\r\n                            <div className=\"hidden methodologyd1\">\r\n                                <Typography variant=\"body2\" style={{ fontSize: '18px' }}>\r\n                                    {dictionary.METHODOLOGY_DESC5}\r\n                                </Typography>\r\n                            </div>\r\n                        </Col>\r\n                        <Col className=\"chip\" lg={2}>\r\n                            <Divider orientation=\"vertical\">\r\n                                <Chip label={<ArrowLeftIcon />} />\r\n                            </Divider>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            </Container>\r\n            <Container id=\"about-section\" fluid className=\"section\" style={{ marginTop: '0px' }}>\r\n                <div style={{ maxWidth: '1240px', textAlign: '' }}>\r\n                    <h1 style={{ marginBottom: 10, marginTop: 10, fontSize: '40px', textAlign: 'left' }} className=\"section-title\">\r\n                        {dictionary.ABOUT_WBSB}\r\n                    </h1>\r\n                    <hr />\r\n                    <Row style={{ margin: 'auto', maxWidth: 1240, marginTop: '40px' }}>\r\n                        <Col\r\n                            className=\"hidden\"\r\n                            lg={5}\r\n                            md={12}\r\n                            sm={12}\r\n                            style={{ display: 'flex', flexDirection: 'column', justifyContent: 'center' }}\r\n                        >\r\n                            <img style={{ width: '100%' }} className=\"banner-image\" src={logo} alt=\"logo\" />\r\n                        </Col>\r\n                        <Col className=\"hidden\" lg={7} md={12} sm={12}>\r\n                            <Typography align=\"justify\">{dictionary.ABOUT_WBSB_DESC1}</Typography>\r\n                            <Typography align=\"justify\">{dictionary.ABOUT_WBSB_DESC2}</Typography>\r\n                            <Typography align=\"justify\">{dictionary.ABOUT_WBSB_DESC3}</Typography>\r\n                            <Typography align=\"justify\">{dictionary.ABOUT_WBSB_DESC4}</Typography>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            </Container>\r\n            <Container id=\"partner-section\" fluid className=\"partner-section\" style={{ marginTop: '0px' }}>\r\n                <div style={{ maxWidth: '1240px', textAlign: '' }}>\r\n                    <h1 style={{ marginBottom: 10, fontSize: '40px' }} className=\"section-title\">\r\n                        {dictionary.PARTNERS}\r\n                    </h1>\r\n                    <hr />\r\n\r\n                    <Row\r\n                        // className=\"row-fluid\"\r\n                        style={{ margin: 'auto', justifyContent: 'space-around', marginTop: '40px' }}\r\n                    >\r\n                        {partners.map((partner, index) => (\r\n                            <Col\r\n                                className=\"hidden partner-card\"\r\n                                lg={4}\r\n                                md={6}\r\n                                sm={12}\r\n                                key={index}\r\n                                // style={{ maxWidth: '35%', display: 'flex', flexDirection: 'column', alignItems: 'center', textAlign: 'center' }}\r\n                            >\r\n                                <div className=\"img-wrapper\">\r\n                                    <img src={partner.logo} alt=\"logo\" />\r\n                                </div>\r\n                                <div className=\"content\">\r\n                                    <h3>{partner.name}</h3>\r\n                                    <Divider />\r\n                                    <p>{partner.description}</p>\r\n                                    <a href={partner.link} className=\"partner-link\">\r\n                                        {dictionary.READ_MORE} ➜\r\n                                    </a>\r\n                                </div>\r\n                            </Col>\r\n                        ))}\r\n                    </Row>\r\n                </div>\r\n            </Container>\r\n\r\n            <Container id=\"donor-section\" fluid style={{ maxWidth: 1240, margin: 'auto', justifyContent: 'center' }}>\r\n                <h1 style={{ marginBottom: 10 }} className=\"section-title\">\r\n                    {dictionary.DONOR}\r\n                </h1>\r\n                <hr />\r\n\r\n                <Row style={{ maxWidth: 1240, margin: 'auto' }}>\r\n                    <Col\r\n                        className=\"donor-image\"\r\n                        lg={6}\r\n                        md={12}\r\n                        sm={12}\r\n                        style={{ display: 'flex', flexDirection: 'column', justifyContent: 'center' }}\r\n                    >\r\n                        <img style={{ width: '100%' }} className=\"banner-image hidden\" src={donor} alt=\"donor\" />\r\n                    </Col>\r\n                    <Col\r\n                        className=\"hidden donor-text\"\r\n                        lg={6}\r\n                        md={12}\r\n                        sm={12}\r\n                        style={{ display: 'flex', flexDirection: 'column', justifyContent: 'center', fontSize: '18px' }}\r\n                    >\r\n                        <Typography variant=\"inherit\">{dictionary.DONATOR}</Typography>\r\n                        <a href=\"https://www.ned.org/\" className=\"partner-link\" style={{ width: 'fit-content', marginTop: 15 }}>\r\n                            {dictionary.READ_MORE} ➜\r\n                        </a>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n\r\n            <Container\r\n                id=\"publication-section\"\r\n                fluid\r\n                style={{ maxWidth: 1240, margin: 'auto', marginTop: '30px', justifyContent: 'center', marginBottom: '90px' }}\r\n            >\r\n                <h1 style={{ marginBottom: 10 }} className=\"section-title\">\r\n                    {dictionary.PUBLICATION}\r\n                </h1>\r\n                <hr />\r\n\r\n                <Row className=\"hidden\" style={{ maxWidth: 1000, margin: 'auto' }}>\r\n                    <PublicationList listSize={3} />\r\n                </Row>\r\n                <div style={{ display: 'flex', alignContent: 'center', justifyContent: 'center', width: '100%' }}>\r\n                    <Link className=\"partner-link\" to=\"publikime\" style={{ textAlign: 'center' }}>\r\n                        {dictionary.READ_MORE} ➜\r\n                    </Link>\r\n                </div>\r\n            </Container>\r\n            <Container fluid style={{ width: '100%', padding: 5 }}>\r\n                <Divider sx={{ bgcolor: '#044389', borderBottomWidth: '5px', width: '100%' }} />\r\n                <Typography variant=\"h5\" style={{ marginLeft: 20, marginTop: 10, marginBottom: 10, padding: '5px 0px' }}>\r\n                    <a href=\"https://qkss.org/\">\r\n                        <img style={{ width: '155px', marginRight: 10 }} src={qkssLogo} alt=\"QKSS Logo\" />\r\n                    </a>\r\n                    {dictionary.RIGHTS}\r\n                </Typography>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n","/* eslint-disable jsx-a11y/no-onchange */\r\nimport { useState } from 'react';\r\nimport { Container, Row } from 'react-bootstrap';\r\nimport { FormControl } from '@mui/material';\r\nimport PublicationList from 'PublicationList';\r\nimport { useLanguage } from 'LanguageContext';\r\n\r\nexport default function Publications() {\r\n    const [year, setYear] = useState(0);\r\n    const { dictionary } = useLanguage();\r\n    const [years, setYears] = useState([]);\r\n\r\n    return (\r\n        <div className=\"homepage\" style={{ marginTop: '0' }}>\r\n            <Container id=\"publications\" fluid style={{ maxWidth: 1000, margin: 'auto', paddingTop: '60px', justifyContent: 'center' }}>\r\n                <Row style={{ padding: '0px 20px' }}>\r\n                    <h1 style={{ marginLeft: 5 }}>{dictionary.PUBLICATION}</h1>\r\n                    <div style={{ flex: 1 }} />\r\n\r\n                    <FormControl>\r\n                        <select value={year} className=\"year-select\" onChange={(e) => setYear(e.target.value)}>\r\n                            <option value={0}>{dictionary.ALL} </option>\r\n                            {years.map((year) => (\r\n                                <option value={year}>{year}</option>\r\n                            ))}\r\n                        </select>\r\n                    </FormControl>\r\n                </Row>\r\n                <Row\r\n                    style={{\r\n                        maxWidth: 1000,\r\n                        margin: 'auto',\r\n                        'box-shadow':\r\n                            '0px 3px 1px -2px rgb(0 0 0 / 20%), 0px 2px 2px 0px rgb(0 0 0 / 14%), 0px 1px 5px 0px rgb(0 0 0 / 0%)',\r\n                        background: 'white',\r\n                        borderRadius: 15,\r\n                        padding: '20px',\r\n                        marginTop: '15px',\r\n                        marginBottom: '60px'\r\n                    }}\r\n                >\r\n                    <PublicationList year={year} setYears={setYears} />\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n","import { Button, Box, Select, MenuItem, Menu } from '@mui/material';\r\nimport { DataGrid, useGridApiContext } from '@mui/x-data-grid';\r\nimport { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default function OrderQuestions() {\r\n    const [categories, setCategories] = useState([]);\r\n    const [selectedCategory, setSelectedCategory] = useState(null);\r\n    const [changes, setChanges] = useState([]);\r\n    function mergeCategories(categories) {\r\n        // The data comes in the form of an array of categories, each category has an array of questions\r\n        // Some categories have the same name, but start with 3 different first characters. These need to be merged. The first 3 characters dictate the order of the categories\r\n\r\n        // First, we need to find the categories that need to be merged\r\n        const categoriesToMerge = {};\r\n        for (let i = 0; i < categories.length; i += 1) {\r\n            const category = categories[i].category;\r\n            if (categoriesToMerge[category.substring(3)]) {\r\n                categoriesToMerge[category.substring(3)].questions = categoriesToMerge[category.substring(3)].questions.concat(\r\n                    categories[i].questions\r\n                );\r\n            } else {\r\n                categoriesToMerge[category.substring(3)] = categories[i];\r\n            }\r\n        }\r\n\r\n        // Now we need to sort the categories by the category name\r\n        const sortedCategories = Object.values(categoriesToMerge).sort((a, b) => {\r\n            if (a.category < b.category) {\r\n                return -1;\r\n            }\r\n            if (a.category > b.category) {\r\n                return 1;\r\n            }\r\n            return 0;\r\n        });\r\n\r\n        sortedCategories.forEach((category) => {\r\n            category.questions.sort((a, b) => {\r\n                if (a.text < b.text) {\r\n                    return -1;\r\n                }\r\n                if (a.text > b.text) {\r\n                    return 1;\r\n                }\r\n                return 0;\r\n            });\r\n        });\r\n\r\n        // remove the first 3 characters from the category name\r\n        sortedCategories.forEach((category) => {\r\n            category.category = category.category.substring(3);\r\n        });\r\n\r\n        return sortedCategories;\r\n    }\r\n\r\n    const handleSave = () => {\r\n        axios.post('/api/questions/order', changes).then((response) => {\r\n            console.log(response);\r\n            alert('Changes saved');\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        // alert('hello');\r\n    }, [categories]);\r\n    useEffect(() => {\r\n        axios\r\n            .get('/api/questions', {\r\n                params: {\r\n                    language: 'ALB'\r\n                }\r\n            })\r\n            .then((response) => {\r\n                const data = mergeCategories(response.data);\r\n                setCategories(data);\r\n                setSelectedCategory(data[0]);\r\n            });\r\n    }, []);\r\n    const columns = [\r\n        // { field: 'id', headerName: 'ID', flex: 1 },\r\n        {\r\n            field: 'text',\r\n            headerName: 'Pyetja',\r\n            flex: 10,\r\n            editable: false\r\n        },\r\n        {\r\n            field: 'rank',\r\n            headerName: 'Renditja',\r\n            type: 'number',\r\n            flex: 1,\r\n            editable: true,\r\n            renderEditCell: (params) => <CustomEditComponent {...params} setChanges={setChanges} />\r\n        }\r\n    ];\r\n\r\n    const rows = [\r\n        { id: 1, name: 'Sa i besoni Administrates se Komunes', category: 'Besimi ne institucione', order: 99 },\r\n        { id: 2, name: 'Sa i besoni Administrates se Komunes', category: 'Besimi ne institucione', order: 99 },\r\n        { id: 3, name: 'Sa i besoni Administrates se Komunes', category: 'Besimi ne institucione', order: 99 }\r\n    ];\r\n\r\n    const drawerWidth = 240;\r\n\r\n    if (!categories.length) {\r\n        return <div>Loading...</div>;\r\n    }\r\n    return (\r\n        // <Box sx={{ display: 'flex' }}>\r\n        <div style={{ width: '100%', display: 'flex', flexDirection: 'column' }}>\r\n            {\r\n                // 1. Zgjidhe categoryy\r\n                // Click on renditja cell to edit\r\n                // switching category does not save it\r\n                // click save to save changes\r\n            }\r\n            <Box\r\n                component=\"main\"\r\n                className=\"graph-wrapper\"\r\n                sx={{\r\n                    borderRadius: '10px 10px 10px 10px',\r\n                    backgroundColor: '#e3f2fd',\r\n                    flexGrow: 1\r\n                    // width: { sm: `calc(100% - ${drawerWidth}px)` }\r\n                }}\r\n            >\r\n                <span>\r\n                    1. Zgjedhni Kategorine per te cilen doni te ndrroni renditjen e pyetjeve. <br />\r\n                    2. Klikoni tek &lsquo;Renditja&lsquo; dhe zgjedhni renditjen. Renditja e pytjeve eshe ne formen: 1,2,3... <br />\r\n                    3. Klikoni &lsquo;Ruaj&lsquo; per te ruajtur ndryshimet. Kujdes nese ndrroni kategorine apo faqen, ndryshimet do humbin.\r\n                </span>\r\n                <hr />\r\n                <b>Kategoria:</b>{' '}\r\n                <Select\r\n                    value={selectedCategory ? selectedCategory.category : ''}\r\n                    onChange={(e) => setSelectedCategory(categories.find((category) => category.category === e.target.value))}\r\n                    style={{ backgroundColor: 'white' }}\r\n                >\r\n                    {categories.map((category) => (\r\n                        // use MUI select options\r\n                        <MenuItem value={category.category}>{category.category}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n                <Box sx={{ height: 700, width: '100%', backgroundColor: 'white' }}>\r\n                    <DataGrid\r\n                        rows={selectedCategory ? selectedCategory.questions : []}\r\n                        columns={columns}\r\n                        pageSize={100}\r\n                        rowsPerPageOptions={[100]}\r\n                        disableSelectionOnClick\r\n                        experimentalFeatures={{ newEditingApi: true }}\r\n                    />\r\n                </Box>\r\n                <Button variant=\"contained\" onClick={handleSave}>\r\n                    Ruaj\r\n                </Button>\r\n            </Box>\r\n        </div>\r\n        // </Box>\r\n    );\r\n}\r\n\r\nfunction CustomEditComponent(props) {\r\n    const { id, value, field, setChanges } = props;\r\n    console.log(props);\r\n    const apiRef = useGridApiContext();\r\n\r\n    const handleValueChange = (event) => {\r\n        const newValue = event.target.value; // The new value entered by the user\r\n        apiRef.current.setEditCellValue({ id, field, value: newValue });\r\n        setChanges((prev) => {\r\n            const newChanges = prev.filter((change) => change.id !== id);\r\n            newChanges.push({ id, value: newValue });\r\n            return newChanges;\r\n        });\r\n    };\r\n\r\n    return <input key={id} type=\"number\" style={{ width: '90%' }} value={value} onChange={handleValueChange} />;\r\n}\r\n","import React from 'react';\r\nimport { GoogleLogin } from '@react-oauth/google';\r\nimport axios from 'axios';\r\nimport jwtDecode from 'jwt-decode';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { useCookies } from 'react-cookie';\r\n\r\nexport default function Admin() {\r\n    const [cookies] = useCookies(['token']);\r\n    if (!cookies.token) {\r\n        return <Login />;\r\n    }\r\n\r\n    return (\r\n        <div style={{ padding: '10%' }}>\r\n            {/*\r\n             Put a list of admin sub-pages here\r\n            */}\r\n            <h1>Admin subdirectories</h1>:\r\n            <ul>\r\n                {/* <li>\r\n                    <Link to=\"/admin\" aria-disabled>\r\n                        Upload data through CSVs (Currently not implemented, needs testing)\r\n                    </Link>\r\n                </li> */}\r\n                <li>\r\n                    <Link to=\"/admin/order-questions\">Change order of questions</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/admin/upload-report\"> Upload report </Link>\r\n                </li>\r\n                <li>\r\n                    <a href=\"https://app.contentful.com/spaces/fhx9ruex8qil/\" target=\"_blank\" rel=\"noreferrer\">\r\n                        Edit content (Contentful)\r\n                    </a>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Login = () => {\r\n    const navigate = useNavigate();\r\n    const handleGoogleLogin = (resp) => {\r\n        const credential = resp.credential;\r\n        // send token to backend in Authorization header\r\n        console.log(credential);\r\n        axios\r\n            .get('/api/auth/google', { headers: { Authorization: `Bearer ${credential}` } })\r\n            .then((resp) => {\r\n                // store in cookies that the user is logged in\r\n                const token = resp.data;\r\n                const decoded = jwtDecode(token);\r\n                document.cookie = `token=${token}; expires=${new Date(decoded.exp * 1000).toUTCString()} path=/`;\r\n                // alert('success');\r\n                // navigate('/admin');\r\n                window.location.reload();\r\n            })\r\n            .catch((err) => {\r\n                alert('You are not authorized to access this page');\r\n                navigate('/');\r\n            });\r\n    };\r\n    return (\r\n        <div\r\n            // center to middle of page\r\n            style={{\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n                flexDirection: 'column',\r\n                height: '100vh'\r\n            }}\r\n        >\r\n            <h1>Admin</h1>\r\n            <p>\r\n                This site is protected by Google OAuth. Please login with your Google account. If you are not authorized, you will be\r\n                redirected to the home page.\r\n            </p>\r\n            <GoogleLogin\r\n                onSuccess={handleGoogleLogin}\r\n                onError={() => {\r\n                    alert('err');\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n","import { Link, useLocation } from 'react-router-dom';\r\nimport TranslateIcon from '@mui/icons-material/Translate';\r\nimport Select from '@mui/material/Select';\r\nimport Box from '@mui/material/Box';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport { Container, Nav, Navbar, Image } from 'react-bootstrap';\r\nimport logo from '../assets/images/logo.png';\r\nimport { FormControl } from '@mui/material';\r\nimport { useLanguage, useLanguageUpdate } from '../LanguageContext';\r\n\r\nexport default function Header() {\r\n    const { language, dictionary } = useLanguage();\r\n    const setLanguage = useLanguageUpdate();\r\n\r\n    return (\r\n        <Navbar collapseOnSelect expand=\"lg\">\r\n            <Navbar.Brand as={Link} to=\"/\">\r\n                <Image src={logo} alt=\"logo\" style={{ width: 'auto', height: 'auto', maxWidth: '190px' }} />\r\n            </Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n\r\n            <Container>\r\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                    <Nav className=\"me-auto\">\r\n                        <LinkWrapper to=\"/\">{dictionary.HOME}</LinkWrapper>\r\n                        <LinkWrapper to=\"/te-dhenat\">{dictionary.DATA}</LinkWrapper>\r\n                        <LinkWrapper to=\"/publikime\">{dictionary.PUBLICATION}</LinkWrapper>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Container>\r\n            <div className=\"translateIcon\">\r\n                <TranslateIcon fontSize=\"small\" style={{ marginRight: 7, color: '#969A97' }} />\r\n            </div>\r\n            <Box sx={{ marginRight: 3 }}>\r\n                <FormControl variant=\"standard\">\r\n                    <Select\r\n                        labelId=\"language-select-label\"\r\n                        id=\"language-select\"\r\n                        value={language}\r\n                        onChange={(e) => {\r\n                            setLanguage(e.target.value);\r\n                        }}\r\n                        className=\"form-select\"\r\n                        aria-label=\"Default select example\"\r\n                    >\r\n                        <MenuItem value=\"ALB\">{dictionary.ALBANIAN}</MenuItem>\r\n                        <MenuItem value=\"ENG\">{dictionary.ENGLISH}</MenuItem>\r\n                        <MenuItem value=\"SRB\">{dictionary.SERBIAN}</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </Box>\r\n        </Navbar>\r\n    );\r\n}\r\n\r\nconst LinkWrapper = ({ to, children }) => {\r\n    const path = useLocation().pathname;\r\n    return (\r\n        <Nav.Link as={Link} to={to} style={{ color: path === to ? '#108EDD' : '', fontWeight: 600, fontSize: '20px' }}>\r\n            {children}\r\n        </Nav.Link>\r\n    );\r\n};\r\n\r\n// const DropdownWrapper = ({ title, to, children }) => {\r\n//     const path = useLocation().pathname;\r\n//     const [show, setShow] = useState(false);\r\n//     const showDropdown = () => {\r\n//         setShow(true);\r\n//     };\r\n//     const hideDropdown = () => {\r\n//         setShow(false);\r\n//     };\r\n\r\n//     return (\r\n//         <NavDropdown\r\n//             title={<span style={{ color: path.includes(to) ? '#108EDD' : '', fontWeight: 600, fontSize: '20px' }}>{title}</span>}\r\n//             show={show}\r\n//             onMouseEnter={showDropdown}\r\n//             onMouseLeave={hideDropdown}\r\n//             onClick={showDropdown}\r\n//             color={path.includes(to) ? '#108EDD' : ''}\r\n//         >\r\n//             {children}\r\n//         </NavDropdown>\r\n//     );\r\n// };\r\n","import React from 'react';\r\nimport { Route, Navigate } from 'react-router-dom';\r\nimport { useCookies } from 'react-cookie';\r\n\r\nexport default function PrivateRoute({ path, children }) {\r\n    const [cookies] = useCookies(['token']);\r\n    console.log(cookies);\r\n\r\n    if (!cookies.token) {\r\n        return <Navigate state={{ from: path }} replace to=\"/\" />;\r\n    }\r\n    return children;\r\n\r\n    // return <>{!cookies.token ? <Route {...props} path={path} /> : <Navigate state={{ from: path }} replace to=\"/\" />}</>;\r\n}\r\n","import { ThemeProvider } from '@mui/material/styles';\r\nimport { Routes, Route } from 'react-router-dom';\r\nimport UploadForm from './components/UploadForm';\r\nimport UploadReport from './components/UploadReport';\r\n// import QuestionNav from './components/QuestionNav';\r\n// import DashboardGra  ph from './components/DashboardGraph';\r\nimport Dashboard from 'components/Dashboard';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Homepage from 'components/Homepage';\r\nimport LanguageProvider from './LanguageContext';\r\nimport Publications from 'components/Publications';\r\nimport OrderQuestions from 'components/OrderQuestions';\r\nimport Admin from 'components/Admin';\r\n// import './assets/scss/style.scss';\r\nimport './assets/scss/style.scss';\r\n// routing\r\n\r\n// import Box from '@mui/material';\r\nimport Header from 'components/Header';\r\nimport { useEffect } from 'react';\r\n\r\nimport { useCookies } from 'react-cookie';\r\n\r\n// import { JWTProvider } from 'contexts/JWTContext';\r\n// import { Auth0Provider } from 'contexts/Auth0Context';\r\n\r\nimport createTheme from '@mui/material/styles/createTheme';\r\nimport axios from 'axios';\r\nimport ReactGA from 'react-ga';\r\nimport PrivateRoute from 'components/PrivateRoute';\r\n// ==============================|| APP ||============================== //\r\n\r\nconst App = () => {\r\n    const TRACKING_ID = 'UA-253190644-1'; // OUR_TRACKING_ID\r\n    ReactGA.initialize(TRACKING_ID);\r\n\r\n    const [cookies] = useCookies(['token']);\r\n    let baseURL = '';\r\n    const inProduction = process.env.NODE_ENV === 'production';\r\n    if (process.env.NODE_ENV === 'development') {\r\n        baseURL = 'http://localhost:8080';\r\n    } else {\r\n        baseURL = '/';\r\n    }\r\n\r\n    axios.defaults.baseURL = baseURL;\r\n\r\n    // attach token to every request if it exists as Authorization header\r\n    axios.interceptors.request.use(\r\n        (config) => {\r\n            const token = cookies.token;\r\n            if (token) {\r\n                config.headers.Authorization = `Bearer ${token}`;\r\n            }\r\n            return config;\r\n        },\r\n        (error) => {\r\n            Promise.reject(error);\r\n        }\r\n    );\r\n    const theme = createTheme({\r\n        typography: {\r\n            fontFamily: 'Campton'\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        ReactGA.pageview(window.location.pathname + window.location.search);\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <LanguageProvider>\r\n                <ThemeProvider theme={theme}>\r\n                    <Header />\r\n                    <Container fluid style={{ height: '100%' }}>\r\n                        <Routes>\r\n                            <Route path=\"/te-dhenat\" element={<Dashboard />} />\r\n                            {/* <Route path=\"/upload-report-qkss-sec\" element={<UploadReport />} /> */}\r\n                            {/* <PrivateRoute path=\"/upload-report\" element={<UploadReport />} /> */}\r\n                            {/* <Route\r\n                                path=\"/admin/upload-data\"\r\n                                element={\r\n                                    <PrivateRoute>\r\n                                        <UploadForm />\r\n                                    </PrivateRoute>\r\n                                }\r\n                            /> */}\r\n                            <Route\r\n                                path=\"/admin/upload-report\"\r\n                                element={\r\n                                    <PrivateRoute>\r\n                                        <UploadReport />\r\n                                    </PrivateRoute>\r\n                                }\r\n                            />\r\n                            <Route\r\n                                path=\"/admin/order-questions\"\r\n                                element={\r\n                                    <PrivateRoute>\r\n                                        <OrderQuestions />\r\n                                    </PrivateRoute>\r\n                                }\r\n                            />\r\n\r\n                            <Route path=\"/admin\" element={<Admin />} />\r\n                            {/* <PrivateRoute path=\"/rendit\" element={<OrderQuestions />} /> */}\r\n                            <Route path=\"/publikime\" element={<Publications />} />\r\n                            <Route path=\"/\" element={<Homepage />} />\r\n                        </Routes>\r\n                    </Container>\r\n                </ThemeProvider>\r\n            </LanguageProvider>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","const config = {\r\n    // basename: only at build time to set, and Don't add '/' at end off BASENAME for breadcrumbs, also Don't put only '/' use blank('') instead,\r\n    // like '/berry-material-react/react/default'\r\n    basename: '',\r\n    defaultPath: '/sample-page',\r\n    fontFamily: `'Comic Sans', comic sans`,\r\n    borderRadius: 12,\r\n    outlinedFilled: true,\r\n    theme: 'light', // light, dark\r\n    presetColor: 'default', // default, theme1, theme2, theme3, theme4, theme5, theme6\r\n    i18n: 'en', // 'en' - English, 'fr' - French, 'ro' - Romanian, 'zh' - Chinese\r\n    rtlLayout: false,\r\n    googleClientId: '361463634645-k1brd3lmdc06n66761o6hmi903onipaj.apps.googleusercontent.com',\r\n    jwt: {\r\n        secret: 'SECRET-KEY',\r\n        timeout: '1 days'\r\n    },\r\n    firebase: {\r\n        apiKey: 'AIzaSyBernKzdSojh_vWXBHt0aRhf5SC9VLChbM',\r\n        authDomain: 'berry-material-react.firebaseapp.com',\r\n        projectId: 'berry-material-react',\r\n        storageBucket: 'berry-material-react.appspot.com',\r\n        messagingSenderId: '901111229354',\r\n        appId: '1:901111229354:web:a5ae5aa95486297d69d9d3',\r\n        measurementId: 'G-MGJHSL8XW3'\r\n    },\r\n    auth0: {\r\n        client_id: '7T4IlWis4DKHSbG8JAye4Ipk0rvXkH9V',\r\n        domain: 'dev-w0-vxep3.us.auth0.com'\r\n    }\r\n};\r\n\r\nexport default config;\r\n","import ReactDOM from 'react-dom';\r\n\r\n// third party\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport 'slick-carousel/slick/slick.css';\r\nimport 'slick-carousel/slick/slick-theme.css';\r\n\r\n// project imports\r\nimport * as serviceWorker from 'serviceWorker';\r\nimport App from 'App';\r\n\r\n// style + assets\r\nimport 'assets/scss/style.scss';\r\nimport config from 'config';\r\nimport { GoogleOAuthProvider } from '@react-oauth/google';\r\n\r\n// ==============================|| REACT DOM RENDER  ||============================== //\r\n\r\nReactDOM.render(\r\n    <GoogleOAuthProvider clientId={config.googleClientId}>\r\n        <BrowserRouter basename={config.basename}>\r\n            <App />\r\n        </BrowserRouter>\r\n    </GoogleOAuthProvider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}