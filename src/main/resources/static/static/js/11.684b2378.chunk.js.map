{"version":3,"sources":["ui-component/cards/RevenueCard.js","views/graphs/index.js"],"names":["RevenueCard","primary","secondary","content","iconPrimary","color","theme","useTheme","matchDownXs","useMediaQuery","breakpoints","down","IconPrimary","primaryIcon","fontSize","Card","sx","background","position","CardContent","Typography","variant","right","top","width","height","opacity","Grid","container","direction","spacing","item","xs","Graphs","React","useState","yourData","setYourData","averageData","setAverageData","completed","setCompleted","yourThematic","setYourThematic","averageThematic","setAverageThematic","VETType","setVETType","size","setSize","country","setCountry","displayVet","setDisplayVet","displayCountry","setDisplayCountry","handeFilter","event","a","preventDefault","axios","get","params","vetType","response","console","log","data","error","resetFilters","getYourData","self","getAverageData","getCompleted","getYourThematic","getAverageThematic","useEffect","thematicElement","data2","id","x","y","MainCard","title","style","display","alignItems","justifyContent","flexWrap","maxWidth","minWidth","margin","toFixed","SportsScoreIcon","palette","main","BarChartIcon","FactCheckIcon","Divider","marginBottom","marginTop","mb","Box","keys","indexBy","valueFormat","bottom","left","borderColor","from","gridLabelOffset","dotSize","dotColor","dotBorderWidth","colors","scheme","blendMode","motionConfig","axisLeft","orient","tickSize","tickPadding","tickRotation","legend","legendOffset","legendPosition","axisBottom","legends","anchor","translateX","translateY","itemWidth","itemHeight","itemTextColor","symbolSize","symbolShape","effects","on","xScale","type","yScale","min","max","stacked","reverse","yFormat","axisTop","axisRight","pointSize","pointColor","pointBorderWidth","pointBorderColor","pointLabelYOffset","useMesh","onSubmit","FormControl","InputLabel","htmlFor","Select","labelId","value","label","onChange","target","MenuItem","TextField","marginLeft","helperText","IconButton","onClick","Button"],"mappings":"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","file":"static/js/11.684b2378.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Card, CardContent, Grid, Typography, useMediaQuery } from '@mui/material';\r\n\r\n// =============================|| REVENUE CARD ||============================= //\r\n\r\nconst RevenueCard = ({ primary, secondary, content, iconPrimary, color }) => {\r\n    const theme = useTheme();\r\n    const matchDownXs = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n    const IconPrimary = iconPrimary;\r\n    const primaryIcon = iconPrimary ? <IconPrimary fontSize=\"large\" /> : null;\r\n\r\n    return (\r\n        <Card sx={{ background: color, position: 'relative', color: '#fff' }}>\r\n            <CardContent>\r\n                <Typography\r\n                    variant=\"body2\"\r\n                    sx={{\r\n                        position: 'absolute',\r\n                        right: 13,\r\n                        top: 14,\r\n                        color: '#fff',\r\n                        '&> svg': { width: 100, height: 100, opacity: '0.5' },\r\n                        [theme.breakpoints.down('sm')]: {\r\n                            top: 13,\r\n                            '&> svg': { width: 80, height: 80 }\r\n                        }\r\n                    }}\r\n                >\r\n                    {primaryIcon}\r\n                </Typography>\r\n                <Grid container direction={matchDownXs ? 'column' : 'row'} spacing={1}>\r\n                    <Grid item xs={12}>\r\n                        <Typography variant=\"h5\" color=\"inherit\">\r\n                            {primary}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Typography variant=\"h3\" color=\"inherit\">\r\n                            {secondary}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Typography variant=\"subtitle2\" color=\"inherit\">\r\n                            {content}\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nRevenueCard.propTypes = {\r\n    primary: PropTypes.string,\r\n    secondary: PropTypes.string,\r\n    content: PropTypes.string,\r\n    iconPrimary: PropTypes.object,\r\n    color: PropTypes.string\r\n};\r\n\r\nexport default RevenueCard;\r\n","// material-ui\r\nimport { Typography, Input, InputLabel, Select, MenuItem, Box, FormControl, Divider, Button, TextField, IconButton } from '@mui/material';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Chart as ChartJS, RadialLinearScale, PointElement, LineElement, Filler, Tooltip, Legend } from 'chart.js';\r\nimport { Radar } from 'react-chartjs-2';\r\nimport SportsScoreIcon from '@mui/icons-material/SportsScore';\r\nimport BarChartIcon from '@mui/icons-material/BarChart';\r\nimport FactCheckIcon from '@mui/icons-material/FactCheck';\r\nimport ClearIcon from '@mui/icons-material/Clear';\r\n\r\nimport { useTheme } from '@mui/material/styles';\r\n\r\n// project imports\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\nimport axios from 'axios';\r\nimport MyResponsiveRadar from './myresponsiveradar';\r\nimport { ResponsiveRadar } from '@nivo/radar';\r\nimport { ResponsiveLine } from '@nivo/line';\r\nimport RevenueCard from 'ui-component/cards/RevenueCard';\r\n\r\n// ==============================|| SAMPLE PAGE ||============================== //\r\nexport default function Graphs() {\r\n    const theme = useTheme();\r\n    /* eslint-disable */\r\n    const [yourData, setYourData] = React.useState(0);\r\n    const [averageData, setAverageData] = React.useState(0);\r\n    const [completed, setCompleted] = React.useState(0);\r\n\r\n    const [yourThematic, setYourThematic] = React.useState({});\r\n    const [averageThematic, setAverageThematic] = React.useState({});\r\n\r\n    const [VETType, setVETType] = React.useState(null);\r\n    const [size, setSize] = React.useState(null);\r\n    const [country, setCountry] = React.useState(null);\r\n\r\n    const [displayVet, setDisplayVet] = React.useState('none');\r\n    const [displayCountry, setDisplayCountry] = React.useState('none');\r\n\r\n    const handleChange1 = (event) => {\r\n        if (event.target.value === 'Other') {\r\n            setDisplayVet('');\r\n            console.log(displayVet);\r\n        }\r\n        setVETType(event.target.value);\r\n    };\r\n    const handleChange2 = (event) => {\r\n        setSize(event.target.value);\r\n    };\r\n    const handleChange3 = (event) => {\r\n        if (event.target.value === 'Other') {\r\n            setDisplayCountry('');\r\n        }\r\n        setCountry(event.target.value);\r\n    };\r\n\r\n    const handeFilter = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            const response = await axios.get('api/answers/average_thematic', {params: {country: country, size: size, vetType : VETType}});\r\n            console.log(response);\r\n            setAverageThematic(response.data);\r\n            console.log(yourThematic)\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    const resetFilters = async () => {\r\n        try {\r\n            const response = await axios.get('api/answers/average_thematic');\r\n            setAverageThematic(response.data);\r\n            setSize(null);\r\n            setCountry(null);\r\n            setVETType(null);\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    const getYourData = async () => {\r\n        try {\r\n            const response = await axios.get('api/answers/average', {params: {self: true}});\r\n            setYourData(response.data);\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    const getAverageData = async () => {\r\n        try {\r\n            const response = await axios.get('api/answers/average');\r\n            setAverageData(response.data);\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    const getCompleted = async () => {\r\n        try {\r\n            const response = await axios.get('api/answers/completed');\r\n            setCompleted(response.data);\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    const getYourThematic = async () => {\r\n        try {\r\n            const response = await axios.get('api/answers/average_thematic', {params: {self: true}});\r\n            console.log(response);\r\n            setYourThematic(response.data);\r\n            console.log(yourThematic)\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    const getAverageThematic = async () => {\r\n        try {\r\n            const response = await axios.get('api/answers/average_thematic');\r\n            console.log(response);\r\n            setAverageThematic(response.data);\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        getYourData();\r\n        getAverageData();\r\n        getCompleted();\r\n        getYourThematic();\r\n        getAverageThematic();\r\n    }, []);\r\n\r\n    const data = [\r\n        {\r\n            thematicElement: 'LGP',\r\n            'Your Score': yourThematic['Leadership & Governance Practices'] ? yourThematic['Leadership & Governance Practices'] : 0,\r\n            'Average Score': averageThematic['Leadership & Governance Practices'] ? averageThematic['Leadership & Governance Practices'] : 0,\r\n        },\r\n        {\r\n            thematicElement: 'TLP',\r\n            'Your Score': yourThematic['Teaching and Learning Practices'] ? yourThematic['Teaching and Learning Practices'] : 0,\r\n            'Average Score': averageThematic['Teaching and Learning Practices'] ? averageThematic['Teaching and Learning Practices'] : 0,\r\n        },\r\n        {\r\n            thematicElement: 'PD',\r\n            'Your Score': yourThematic['Professional Development'] ? yourThematic['Professional Development'] : 0,\r\n            'Average Score': averageThematic['Professional Development'] ? averageThematic['Professional Development'] : 0,\r\n        },\r\n        {\r\n            thematicElement: 'AP',\r\n            'Your Score': yourThematic['Assessment practices'] ? yourThematic['Assessment practices'] : 0,\r\n            'Average Score': averageThematic['Assessment practices'] ? averageThematic['Assessment practices'] : 0,\r\n        },\r\n        {\r\n            thematicElement: 'CC',\r\n            'Your Score': yourThematic['Content and Curricula'] ? yourThematic['Content and Curricula'] : 0,\r\n            'Average Score': averageThematic['Content and Curricula'] ? averageThematic['Content and Curricula'] : 0,\r\n        },\r\n        {\r\n            thematicElement: 'CN',\r\n            'Your Score': yourThematic['Collaboration and Networking'] ? yourThematic['Collaboration and Networking'] : 0,\r\n            'Average Score': averageThematic['Collaboration and Networking'] ? averageThematic['Collaboration and Networking'] : 0,\r\n        },\r\n        {\r\n            thematicElement: 'I',\r\n            'Your Score': yourThematic['Infrastructure'] ? yourThematic['Infrastructure'] : 0,\r\n            'Average Score': averageThematic['Infrastructure'] ? averageThematic['Infrastructure'] : 0,\r\n        }\r\n    ];\r\n\r\n    const data2 = [\r\n        {\r\n            id: 'Your Score',\r\n            color: 'hsl(239, 70%, 50',\r\n            data: [\r\n                {\r\n                    x: 'LGP',\r\n                    y: yourThematic['Leadership & Governance Practices'] ? yourThematic['Leadership & Governance Practices'] : 0\r\n                },\r\n                {\r\n                    x: 'TLP',\r\n                    y: yourThematic['Teaching and Learning Practices'] ? yourThematic['Teaching and Learning Practices'] : 0\r\n                },\r\n                {\r\n                    x: 'PD',\r\n                    y: yourThematic['Professional Development'] ? yourThematic['Professional Development'] : 0\r\n                },\r\n                {\r\n                    x: 'AP',\r\n                    y: yourThematic['Assessment practices'] ? yourThematic['Assessment practices'] : 0\r\n                },\r\n                {\r\n                    x: 'CC',\r\n                    y: yourThematic['Content and Curricula'] ? yourThematic['Content and Curricula'] : 0\r\n                },\r\n                {\r\n                    x: 'CN',\r\n                    y: yourThematic['Collaboration and Networking'] ? yourThematic['Collaboration and Networking'] : 0\r\n                },\r\n                {\r\n                    x: 'I',\r\n                    y: yourThematic['Infrastructure'] ? yourThematic['Infrastructure'] : 0\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            id: 'Average Score',\r\n            color: 'hsl(46, 70%, 50%)',\r\n            data: [\r\n                {\r\n                    x: 'LGP',\r\n                    y: averageThematic['Leadership & Governance Practices'] ? averageThematic['Leadership & Governance Practices'] : 0\r\n                },\r\n                {\r\n                    x: 'TLP',\r\n                    y: averageThematic['Teaching and Learning Practices'] ? averageThematic['Teaching and Learning Practices'] : 0\r\n                },\r\n                {\r\n                    x: 'PD',\r\n                    y: averageThematic['Professional Development'] ? averageThematic['Professional Development'] : 0\r\n                },\r\n                {\r\n                    x: 'AP',\r\n                    y: averageThematic['Assessment practices'] ? averageThematic['Assessment practices'] : 0\r\n                },\r\n                {\r\n                    x: 'CC',\r\n                    y: averageThematic['Content and Curricula'] ? averageThematic['Content and Curricula'] : 0\r\n                },\r\n                {\r\n                    x: 'CN',\r\n                    y: averageThematic['Collaboration and Networking'] ? averageThematic['Collaboration and Networking'] : 0\r\n                },\r\n                {\r\n                    x: 'I',\r\n                    y: averageThematic['Infrastructure'] ? averageThematic['Infrastructure'] : 0\r\n                }\r\n            ]\r\n        }\r\n    ];\r\n\r\n    return (\r\n        <MainCard title=\"Graphs and Charts\">\r\n            <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', flexWrap: 'wrap' }}>\r\n                <div style={{ maxWidth: '300px', minWidth: '250px', margin: '12px' }}>\r\n                    <RevenueCard\r\n                        primary=\"Your average score\"\r\n                        secondary={yourData ? yourData.toFixed(2) : '0' }\r\n                        content=\"Out of a total 5\"\r\n                        iconPrimary={SportsScoreIcon}\r\n                        color={theme.palette.primary.main}\r\n                    />\r\n                </div>\r\n                <div style={{ maxWidth: '300px', minWidth: '250px', margin: '12px' }}>\r\n                    <RevenueCard\r\n                        primary=\"Overall average score\"\r\n                        secondary={averageData.toFixed(2)}\r\n                        content=\"Out of a total 5\"\r\n                        iconPrimary={BarChartIcon}\r\n                        color={theme.palette.primary.main}\r\n                    />\r\n                </div>\r\n                <div style={{ maxWidth: '300px', minWidth: '250px', margin: '12px' }}>\r\n                    <RevenueCard\r\n                        primary=\"Total number of completed assessments\"\r\n                        secondary={completed}\r\n                        content=\"\"\r\n                        iconPrimary={FactCheckIcon}\r\n                        color={theme.palette.primary.main}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <Divider />\r\n            <div style={{ marginBottom: 5, marginTop: 10 }}>\r\n                <Typography variant=\"h4\" sx={{ mb: 2 }}>\r\n                    Legend for charts:\r\n                </Typography>\r\n                <Typography>\r\n                    LGP - Leadership & Governance Practices, <br />\r\n                    TLP - Teaching and Learning Practices, <br></br>PD - Professional Development, <br></br>AP - Assessment practices,\r\n                    <br></br>CC - Content and Curricula, <br></br>CN - Collaboration and Networking, <br></br>I - Infrastructure.\r\n                </Typography>\r\n            </div>\r\n            <Divider />\r\n            <Box sx={{ minWidth: 120, marginTop: -1 }}>\r\n                <div style={{ height: '400px' }}>\r\n                    <ResponsiveRadar\r\n                        data={data}\r\n                        keys={['Your Score', 'Average Score']}\r\n                        indexBy=\"thematicElement\"\r\n                        valueFormat=\">-.2f\"\r\n                        margin={{ top: 70, right: 45, bottom: 40, left: 50 }}\r\n                        borderColor={{ from: 'color' }}\r\n                        gridLabelOffset={36}\r\n                        dotSize={2}\r\n                        dotColor={{ theme: 'background' }}\r\n                        dotBorderWidth={3}\r\n                        colors={{ scheme: 'set2' }}\r\n                        blendMode=\"multiply\"\r\n                        motionConfig=\"wobbly\"\r\n                        axisLeft={{\r\n                            orient: 'left',\r\n                            tickSize: 5,\r\n                            tickPadding: 5,\r\n                            tickRotation: 0,\r\n                            legend: 'Score',\r\n                            legendOffset: -40,\r\n                            legendPosition: 'middle'\r\n                        }}\r\n                        axisBottom={{\r\n                            orient: 'bottom',\r\n                            tickSize: 5,\r\n                            tickPadding: 8,\r\n                            tickRotation: 10,\r\n                            legend: 'transportation',\r\n                            legendOffset: 36,\r\n                            legendPosition: 'middle'\r\n                        }}\r\n                        legends={[\r\n                            {\r\n                                anchor: 'top-left',\r\n                                direction: 'column',\r\n                                translateX: -50,\r\n                                translateY: -40,\r\n                                itemWidth: 80,\r\n                                itemHeight: 20,\r\n                                itemTextColor: '#999',\r\n                                symbolSize: 12,\r\n                                symbolShape: 'circle',\r\n                                effects: [\r\n                                    {\r\n                                        on: 'hover',\r\n                                        style: {\r\n                                            itemTextColor: '#000'\r\n                                        }\r\n                                    }\r\n                                ]\r\n                            }\r\n                        ]}\r\n                    />\r\n                </div>\r\n                <Divider />\r\n                <div style={{ height: '400px' }}>\r\n                    <ResponsiveLine\r\n                        data={data2}\r\n                        margin={{ top: 50, right: 15, bottom: 50, left: 60 }}\r\n                        xScale={{ type: 'point' }}\r\n                        yScale={{\r\n                            type: 'linear',\r\n                            min: 'auto',\r\n                            max: 'auto',\r\n                            stacked: false,\r\n                            reverse: false\r\n                        }}\r\n                        yFormat=\" >-.2f\"\r\n                        axisTop={null}\r\n                        axisRight={null}\r\n                        colors={{ scheme: 'set2' }}\r\n                        axisBottom={{\r\n                            orient: 'bottom',\r\n                            tickSize: 5,\r\n                            tickPadding: 8,\r\n                            tickRotation: 0\r\n                        }}\r\n                        axisLeft={{\r\n                            orient: 'left',\r\n                            tickSize: 5,\r\n                            tickPadding: 5,\r\n                            tickRotation: 0,\r\n                            legend: 'Score',\r\n                            legendOffset: -40,\r\n                            legendPosition: 'middle'\r\n                        }}\r\n                        pointSize={10}\r\n                        pointColor={{ theme: 'background' }}\r\n                        pointBorderWidth={2}\r\n                        pointBorderColor={{ from: 'serieColor' }}\r\n                        pointLabelYOffset={-12}\r\n                        useMesh={true}\r\n                        legends={[\r\n                            {\r\n                                anchor: 'top',\r\n                                direction: 'row',\r\n                                translateX: 0,\r\n                                translateY: -35,\r\n                                itemWidth: 110,\r\n                                itemHeight: 20,\r\n                                itemTextColor: '#999',\r\n                                symbolSize: 12,\r\n                                symbolShape: 'circle',\r\n                                effects: [\r\n                                    {\r\n                                        on: 'hover',\r\n                                        style: {\r\n                                            itemTextColor: '#000'\r\n                                        }\r\n                                    }\r\n                                ]\r\n                            }\r\n                        ]}\r\n                    />\r\n                </div>\r\n                <Divider />\r\n                <Typography sx={{ marginTop: 1.5, marginBottom: 1.5 }}>Filter the data: </Typography>\r\n                <form onSubmit={handeFilter}>\r\n                    <FormControl sx={{ margin: 1, width: '30%', minWidth: '240px' }}>\r\n                        <InputLabel id=\"VET organization type\" htmlFor=\"VET organization type\">\r\n                            VET organization type:\r\n                        </InputLabel>\r\n                        <Select\r\n                            labelId=\"VET organization type\"\r\n                            id=\"VET organization type\"\r\n                            value={VETType}\r\n                            label=\"VET organization type:\"\r\n                            onChange={handleChange1}\r\n                        >\r\n                            <MenuItem value=\"Initial vocational education and training institutions (IVET)\">\r\n                                Initial vocational education and training institutions (IVET)\r\n                            </MenuItem>\r\n                            <MenuItem value=\"Continuing vocational education and training institutions (CVET)\">\r\n                                Continuing vocational education and training institutions (CVET)\r\n                            </MenuItem>\r\n                            <MenuItem value=\"Higher Education Institutions\">Higher Education Institutions</MenuItem>\r\n                            <MenuItem value=\"Research & amp; Development Institutions\">Research & amp; Development Institutions</MenuItem>\r\n                            <MenuItem value=\"Other\">Other</MenuItem>\r\n                        </Select>\r\n                        <TextField\r\n                            sx={{ marginTop: 1.5, marginLeft: 1, display: displayVet }}\r\n                            id=\"outlined-basic\"\r\n                            helperText=\" Please specify other organization type\"\r\n                            variant=\"standard\"\r\n                        />\r\n                    </FormControl>\r\n\r\n                    <FormControl sx={{ margin: 1, width: '30%', minWidth: '240px' }}>\r\n                        <InputLabel id=\"size\" htmlFor=\"size\">\r\n                            Size:\r\n                        </InputLabel>\r\n                        <Select labelId=\"size\" id=\"size\" value={size} label=\"Size:\" onChange={handleChange2}>\r\n                            <MenuItem value=\"Micro\">Micro: employment up to 9 persons</MenuItem>\r\n                            <MenuItem value=\"Small\">Small: 10-50 employers</MenuItem>\r\n                            <MenuItem value=\"Medium\">Medium: 51-250 employers</MenuItem>\r\n                            <MenuItem value=\"Large\">Large: over 251 employers</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n\r\n                    <FormControl width={''} sx={{ margin: 1, width: '30%', minWidth: '240px' }}>\r\n                        <InputLabel id=\"country\" htmlFor=\"country\">\r\n                            Country:\r\n                        </InputLabel>\r\n                        <Select labelId=\"country\" id=\"country\" value={country} label=\"Country:\" onChange={handleChange3}>\r\n                            <MenuItem value=\"Austria\">Austria</MenuItem>\r\n                            <MenuItem value=\"Belgium\">Belgium</MenuItem>\r\n                            <MenuItem value=\"Bulgaria\">Bulgaria</MenuItem>\r\n                            <MenuItem value=\"Croatia\">Croatia</MenuItem>\r\n                            <MenuItem value=\"Republic of Cyprus\">Republic of Cyprus</MenuItem>\r\n                            <MenuItem value=\"Czech Republic\">Czech Republic</MenuItem>\r\n                            <MenuItem value=\"Denmark\">Denmark</MenuItem>\r\n                            <MenuItem value=\"Estonia\">Estonia</MenuItem>\r\n                            <MenuItem value=\"Finland\">Finland</MenuItem>\r\n                            <MenuItem value=\"France\">France</MenuItem>\r\n                            <MenuItem value=\"Germany\">Germany</MenuItem>\r\n                            <MenuItem value=\"Greece\">Greece</MenuItem>\r\n                            <MenuItem value=\"Hungary\">Hungary</MenuItem>\r\n                            <MenuItem value=\"Ireland\">Ireland</MenuItem>\r\n                            <MenuItem value=\"Italy\">Italy</MenuItem>\r\n                            <MenuItem value=\"Latvia\">Latvia</MenuItem>\r\n                            <MenuItem value=\"Lithuania\">Lithuania</MenuItem>\r\n                            <MenuItem value=\"Luxembourg\">Luxembourg</MenuItem>\r\n                            <MenuItem value=\"Malta\">Malta</MenuItem>\r\n                            <MenuItem value=\"Netherlands\">Netherlands</MenuItem>\r\n                            <MenuItem value=\"Poland\">Poland</MenuItem>\r\n                            <MenuItem value=\"Portugal\">Portugal</MenuItem>\r\n                            <MenuItem value=\"Romania\">Romania</MenuItem>\r\n                            <MenuItem value=\"Slovakia\">Slovakia</MenuItem>\r\n                            <MenuItem value=\"Slovenia\">Slovenia</MenuItem>\r\n                            <MenuItem value=\"Spain\">Spain</MenuItem>\r\n                            <MenuItem value=\"Sweden\">Sweden</MenuItem>\r\n                            <MenuItem value=\"The United Kingdom\">The United Kingdom</MenuItem>\r\n                            <MenuItem value=\"Other\">Other</MenuItem>\r\n                        </Select>\r\n                        <TextField\r\n                            sx={{ marginTop: 1.5, marginLeft: 1, display: displayCountry }}\r\n                            id=\"outlined-basic\"\r\n                            helperText=\" Please specify other country\"\r\n                            variant=\"standard\"\r\n                        />\r\n                    </FormControl>\r\n                    <IconButton onClick={resetFilters} size=\"large\" sx={{ marginTop: 1.5, marginBottom: 1.5 }}>\r\n                                <ClearIcon/>\r\n                    </IconButton>\r\n                    <Button sx={{marginLeft: 1, width: '150px' }} variant=\"contained\" type=\"submit\" color=\"primary\">\r\n                        Filter\r\n                    </Button>\r\n                </form>\r\n            </Box>\r\n        </MainCard>\r\n    );\r\n}\r\n"],"sourceRoot":""}